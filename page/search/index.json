[{"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it.\n1 Requirements Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme.\nJust install latest edition of :(far fa-file-archive fa-fw): Hugo for your OS (Windows, Linux, macOS).\nWhen you need to use Hugo extended edition? When you want style customization, you need to use the Hugo extended edition for correct rendering.\nHugo extended edition 2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.\n2.1 Create Your Project Hugo provides a new command to create a new website:\nhugo new site my_website cd my_website2.2 Install the Theme The LoveIt theme\u0026rsquo;s repository is: https://github.com/dillonzq/LoveIt.\nYou can download the release :(far fa-file-archive fa-fw): .zip file of the theme and extract it in the themes directory.\nAlternatively, clone this repository to the themes directory:\ngit clone https://github.com/dillonzq/LoveIt.git themes/LoveItOr, create an empty git repository and make this repository a submodule of your site directory:\ngit init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt LoveIt theme\u0026#39;s compatibility LoveIt branch or version Supported Hugo versions master(Unstable) ≥ 0.128.0 0.3.X(Recommended) 0.128.0 - 0.143.1 0.2.X(Outdated) 0.68.0 - 0.127.0 2.3 Basic Configuration The following is a basic configuration for the LoveIt theme:\nbaseURL = \u0026#34;http://example.org/\u0026#34; # Change the default theme to be use when building the site with Hugo theme = \u0026#34;LoveIt\u0026#34; # website title title = \u0026#34;My New Hugo Site\u0026#34; # language code [\u0026#34;en\u0026#34;, \u0026#34;zh-CN\u0026#34;, \u0026#34;fr\u0026#34;, \u0026#34;pl\u0026#34;, ...] languageCode = \u0026#34;en\u0026#34; # language name [\u0026#34;English\u0026#34;, \u0026#34;简体中文\u0026#34;, \u0026#34;Français\u0026#34;, \u0026#34;Polski\u0026#34;, ...] languageName = \u0026#34;English\u0026#34; # Menu config [menu] [[menu.main]] weight = 1 identifier = \u0026#34;posts\u0026#34; # you can add extra information before the name (HTML format is supported), such as icons pre = \u0026#34;\u0026#34; # you can add extra information after the name (HTML format is supported), such as icons post = \u0026#34;\u0026#34; name = \u0026#34;Posts\u0026#34; url = \u0026#34;/posts/\u0026#34; # title will be shown when you hover on this menu link title = \u0026#34;\u0026#34; [[menu.main]] weight = 2 identifier = \u0026#34;tags\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Tags\u0026#34; url = \u0026#34;/tags/\u0026#34; title = \u0026#34;\u0026#34; [[menu.main]] weight = 3 identifier = \u0026#34;categories\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Categories\u0026#34; url = \u0026#34;/categories/\u0026#34; title = \u0026#34;\u0026#34; # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false Note When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (hugo.toml) and set the theme as the default. 2.4 Create Your First Post Here is the way to create your first post:\nhugo new posts/first_post.mdFeel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file.\nNote By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. 2.5 Launching the Website Locally Launch by using the following command:\nhugo serveGo to http://localhost:1313.\nBasic configuration preview Tip When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Note Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing.\nhugo serve --disableFastRender 2.6 Build the Website When your site is ready to deploy, run the following command:\nhugoA public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server.\nTip The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more\u0026hellip; 3 Configuration 3.1 Site Configuration In addition to Hugo global configuration and menu configuration, LoveIt lets you define the following parameters in your site configuration (here is a hugo.toml, whose values are default).\nPlease open the code block below to view the complete sample configuration :(far fa-hand-point-down fa-fw)::\nbaseURL = \u0026#34;http://example.org/\u0026#34; # Change the default theme to be use when building the site with Hugo theme = \u0026#34;LoveIt\u0026#34; # website title title = \u0026#34;My New Hugo Site\u0026#34; # language code [\u0026#34;en\u0026#34;, \u0026#34;zh-CN\u0026#34;, \u0026#34;fr\u0026#34;, \u0026#34;pl\u0026#34;, ...] languageCode = \u0026#34;en\u0026#34; # language name [\u0026#34;English\u0026#34;, \u0026#34;简体中文\u0026#34;, \u0026#34;Français\u0026#34;, \u0026#34;Polski\u0026#34;, ...] languageName = \u0026#34;English\u0026#34; # whether to include Chinese/Japanese/Korean hasCJKLanguage = false # copyright description used only for seo schema copyright = \u0026#34;\u0026#34; # whether to use robots.txt enableRobotsTXT = true # whether to use git commit log enableGitInfo = true # whether to use emoji code enableEmoji = true # ignore some build errors ignoreErrors = [\u0026#34;error-remote-getjson\u0026#34;, \u0026#34;error-missing-instagram-accesstoken\u0026#34;] # Pagination config [pagination] disableAliases = false pagerSize = 10 path = \u0026#34;page\u0026#34; # Menu config [menu] [[menu.main]] weight = 1 identifier = \u0026#34;posts\u0026#34; # you can add extra information before the name (HTML format is supported), such as icons pre = \u0026#34;\u0026#34; # you can add extra information after the name (HTML format is supported), such as icons post = \u0026#34;\u0026#34; name = \u0026#34;Posts\u0026#34; url = \u0026#34;/posts/\u0026#34; # title will be shown when you hover on this menu link title = \u0026#34;\u0026#34; [[menu.main]] weight = 2 identifier = \u0026#34;tags\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Tags\u0026#34; url = \u0026#34;/tags/\u0026#34; title = \u0026#34;\u0026#34; [[menu.main]] weight = 3 identifier = \u0026#34;categories\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Categories\u0026#34; url = \u0026#34;/categories/\u0026#34; title = \u0026#34;\u0026#34; [params] # site default theme [\u0026#34;auto\u0026#34;, \u0026#34;light\u0026#34;, \u0026#34;dark\u0026#34;] defaultTheme = \u0026#34;auto\u0026#34; # public git repo url only then enableGitInfo is true gitRepo = \u0026#34;\u0026#34; # which hash function used for SRI, when empty, no SRI is used # [\u0026#34;sha256\u0026#34;, \u0026#34;sha384\u0026#34;, \u0026#34;sha512\u0026#34;, \u0026#34;md5\u0026#34;] fingerprint = \u0026#34;\u0026#34; # date format dateFormat = \u0026#34;2006-01-02\u0026#34; # website title for Open Graph and Twitter Cards title = \u0026#34;My cool site\u0026#34; # website description for RSS, SEO, Open Graph and Twitter Cards description = \u0026#34;This is my cool site\u0026#34; # website images for Open Graph and Twitter Cards images = [\u0026#34;/logo.png\u0026#34;] # Author config [params.author] name = \u0026#34;xxxx\u0026#34; email = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34; # Header config [params.header] # desktop header mode [\u0026#34;fixed\u0026#34;, \u0026#34;normal\u0026#34;, \u0026#34;auto\u0026#34;] desktopMode = \u0026#34;fixed\u0026#34; # mobile header mode [\u0026#34;fixed\u0026#34;, \u0026#34;normal\u0026#34;, \u0026#34;auto\u0026#34;] mobileMode = \u0026#34;auto\u0026#34; # Header title config [params.header.title] # URL of the LOGO logo = \u0026#34;\u0026#34; # title name name = \u0026#34;\u0026#34; # you can add extra information before the name (HTML format is supported), such as icons pre = \u0026#34;\u0026#34; # you can add extra information after the name (HTML format is supported), such as icons post = \u0026#34;\u0026#34; # whether to use typeit animation for title name typeit = false # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = \u0026#39;\u0026#39; # whether to show Hugo and theme info hugo = true # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \u0026#34;\u0026#34; # license info (HTML format is supported) license = \u0026#39;\u0026lt;a rel=\u0026#34;license external nofollow noopener noreffer\u0026#34; href=\u0026#34;https://creativecommons.org/licenses/by-nc/4.0/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;CC BY-NC 4.0\u0026lt;/a\u0026gt;\u0026#39; # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \u0026#34;01-02\u0026#34; # amount of RSS pages rss = 10 # List (category or tag) page config [params.list] # special amount of posts in each list page paginate = 20 # date format (month and day) dateFormat = \u0026#34;01-02\u0026#34; # amount of RSS pages rss = 10 # App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \u0026#34;My cool site\u0026#34; # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use in place of older style .png and .ico files svgFavicon = \u0026#34;\u0026#34; # Android browser theme color themeColor = \u0026#34;#ffffff\u0026#34; # Safari mask icon color iconColor = \u0026#34;#5bbad5\u0026#34; # Windows v8-10 tile color tileColor = \u0026#34;#da532c\u0026#34; # Search config [params.search] enable = true # type of search engine [\u0026#34;lunr\u0026#34;, \u0026#34;algolia\u0026#34;] type = \u0026#34;lunr\u0026#34; # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \u0026#34;\u0026#34; # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \u0026#34;em\u0026#34; # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \u0026#34;\u0026#34; appID = \u0026#34;\u0026#34; searchKey = \u0026#34;\u0026#34; # Home page config [params.home] # amount of RSS pages rss = 10 # Home page profile [params.home.profile] enable = true # Gravatar Email for preferred avatar in home page gravatarEmail = \u0026#34;\u0026#34; # URL of avatar shown in home page avatarURL = \u0026#34;/images/avatar.png\u0026#34; # title shown in home page (HTML format is supported) title = \u0026#34;\u0026#34; # subtitle shown in home page (HTML format is supported) subtitle = \u0026#34;This is My New Hugo Site\u0026#34; # whether to use typeit animation for subtitle typeit = true # whether to show social links social = true # disclaimer (HTML format is supported) disclaimer = \u0026#34;\u0026#34; # Home page posts [params.home.posts] enable = true # special amount of posts in each home posts page paginate = 6 # replaced with hiddenFromHomePage in params.page # default behavior when you don\u0026#39;t set \u0026#34;hiddenFromHomePage\u0026#34; in front matter defaultHiddenFromHomePage = false # Social config about the author [params.social] GitHub = \u0026#34;xxxx\u0026#34; Linkedin = \u0026#34;\u0026#34; Twitter = \u0026#34;xxxx\u0026#34; Instagram = \u0026#34;xxxx\u0026#34; Facebook = \u0026#34;xxxx\u0026#34; Telegram = \u0026#34;xxxx\u0026#34; Medium = \u0026#34;\u0026#34; Gitlab = \u0026#34;\u0026#34; Youtubelegacy = \u0026#34;\u0026#34; Youtubecustom = \u0026#34;\u0026#34; Youtubechannel = \u0026#34;\u0026#34; Tumblr = \u0026#34;\u0026#34; Quora = \u0026#34;\u0026#34; Keybase = \u0026#34;\u0026#34; Pinterest = \u0026#34;\u0026#34; Reddit = \u0026#34;\u0026#34; Codepen = \u0026#34;\u0026#34; FreeCodeCamp = \u0026#34;\u0026#34; Bitbucket = \u0026#34;\u0026#34; Stackoverflow = \u0026#34;\u0026#34; Weibo = \u0026#34;\u0026#34; Odnoklassniki = \u0026#34;\u0026#34; VK = \u0026#34;\u0026#34; Flickr = \u0026#34;\u0026#34; Xing = \u0026#34;\u0026#34; Snapchat = \u0026#34;\u0026#34; Soundcloud = \u0026#34;\u0026#34; Spotify = \u0026#34;\u0026#34; Bandcamp = \u0026#34;\u0026#34; Paypal = \u0026#34;\u0026#34; Fivehundredpx = \u0026#34;\u0026#34; Mix = \u0026#34;\u0026#34; Goodreads = \u0026#34;\u0026#34; Lastfm = \u0026#34;\u0026#34; Foursquare = \u0026#34;\u0026#34; Hackernews = \u0026#34;\u0026#34; Kickstarter = \u0026#34;\u0026#34; Patreon = \u0026#34;\u0026#34; Steam = \u0026#34;\u0026#34; Twitch = \u0026#34;\u0026#34; Strava = \u0026#34;\u0026#34; Skype = \u0026#34;\u0026#34; Whatsapp = \u0026#34;\u0026#34; Zhihu = \u0026#34;\u0026#34; Douban = \u0026#34;\u0026#34; Angellist = \u0026#34;\u0026#34; Slidershare = \u0026#34;\u0026#34; Jsfiddle = \u0026#34;\u0026#34; Deviantart = \u0026#34;\u0026#34; Behance = \u0026#34;\u0026#34; Dribbble = \u0026#34;\u0026#34; Wordpress = \u0026#34;\u0026#34; Vine = \u0026#34;\u0026#34; Googlescholar = \u0026#34;\u0026#34; Researchgate = \u0026#34;\u0026#34; Mastodon = \u0026#34;\u0026#34; Thingiverse = \u0026#34;\u0026#34; Devto = \u0026#34;\u0026#34; Gitea = \u0026#34;\u0026#34; XMPP = \u0026#34;\u0026#34; Matrix = \u0026#34;\u0026#34; Bilibili = \u0026#34;\u0026#34; Discord = \u0026#34;\u0026#34; DiscordInvite = \u0026#34;\u0026#34; Lichess = \u0026#34;\u0026#34; ORCID = \u0026#34;\u0026#34; Pleroma = \u0026#34;\u0026#34; Kaggle = \u0026#34;\u0026#34; MediaWiki= \u0026#34;\u0026#34; Plume = \u0026#34;\u0026#34; HackTheBox = \u0026#34;\u0026#34; RootMe= \u0026#34;\u0026#34; Malt = \u0026#34;\u0026#34; TikTok = \u0026#34;\u0026#34; TryHackMe = \u0026#34;\u0026#34; Codeberg = \u0026#34;\u0026#34; Phone = \u0026#34;\u0026#34; Email = \u0026#34;xxxx@xxxx.com\u0026#34; RSS = true # # Page global config [params.page] # whether to hide a page from home page hiddenFromHomePage = false # whether to hide a page from search results hiddenFromSearch = false # whether to enable twemoji twemoji = false # whether to enable lightgallery lightgallery = false # whether to enable the ruby extended syntax ruby = true # whether to enable the fraction extended syntax fraction = true # whether to enable the fontawesome extended syntax fontawesome = true # whether to show link to Raw Markdown content of the content linkToMarkdown = true # whether to show the full text content in RSS rssFullText = false # Table of the contents config [params.page.toc] # whether to enable the table of the contents enable = true # whether to keep the static table of the contents in front of the post keepStatic = false # whether to make the table of the contents in the sidebar automatically collapsed auto = true # KaTeX mathematical formulas [params.page.math] enable = true # default inline delimiter is $ ... $ and \\( ... \\) inlineLeftDelimiter = \u0026#34;\u0026#34; inlineRightDelimiter = \u0026#34;\u0026#34; # default block delimiter is $$ ... $$, \\[ ... \\], \\begin{equation} ... \\end{equation} and some other functions blockLeftDelimiter = \u0026#34;\u0026#34; blockRightDelimiter = \u0026#34;\u0026#34; # KaTeX extension copy_tex copyTex = true # KaTeX extension mhchem mhchem = true # Code config [params.page.code] # whether to show the copy button of the code block copy = true # the maximum number of lines of displayed code by default maxShownLines = 50 # Mapbox GL JS config [params.page.mapbox] # access token of Mapbox GL JS accessToken = \u0026#34;\u0026#34; # style for the light theme lightStyle = \u0026#34;mapbox://styles/mapbox/light-v10?optimize=true\u0026#34; # style for the dark theme darkStyle = \u0026#34;mapbox://styles/mapbox/dark-v10?optimize=true\u0026#34; # whether to add NavigationControl navigation = true # whether to add GeolocateControl geolocate = true # whether to add ScaleControl scale = true # whether to add FullscreenControl fullscreen = true # social share links in post page [params.page.share] enable = true Twitter = true Facebook = true Linkedin = false Whatsapp = false Pinterest = false Tumblr = false HackerNews = true Reddit = false VK = false Buffer = false Xing = false Line = true Instapaper = false Pocket = false Flipboard = false Weibo = true Blogger = false Baidu = false Odnoklassniki = false Evernote = false Skype = false Trello = false Mix = false # Comment config [params.page.comment] enable = false # Disqus comment config [params.page.comment.disqus] # enable = false # Disqus shortname to use Disqus in posts shortname = \u0026#34;\u0026#34; # Gitalk comment config [params.page.comment.gitalk] # enable = false owner = \u0026#34;\u0026#34; repo = \u0026#34;\u0026#34; clientId = \u0026#34;\u0026#34; clientSecret = \u0026#34;\u0026#34; # Valine comment config [params.page.comment.valine] enable = false appId = \u0026#34;\u0026#34; appKey = \u0026#34;\u0026#34; placeholder = \u0026#34;\u0026#34; avatar = \u0026#34;mp\u0026#34; meta= \u0026#34;\u0026#34; pageSize = 10 # automatically adapt the current theme i18n configuration when empty lang = \u0026#34;\u0026#34; visitor = true recordIP = true highlight = true enableQQ = false serverURLs = \u0026#34;\u0026#34; # emoji data file name, default is \u0026#34;google.yml\u0026#34; # [\u0026#34;apple.yml\u0026#34;, \u0026#34;google.yml\u0026#34;, \u0026#34;facebook.yml\u0026#34;, \u0026#34;twitter.yml\u0026#34;] # located in \u0026#34;themes/LoveIt/assets/lib/valine/emoji/\u0026#34; directory # you can store your own data files in the same path under your project: # \u0026#34;assets/lib/valine/emoji/\u0026#34; emoji = \u0026#34;\u0026#34; # Facebook comment config [params.page.comment.facebook] enable = false width = \u0026#34;100%\u0026#34; numPosts = 10 appId = \u0026#34;\u0026#34; # automatically adapt the current theme i18n configuration when empty languageCode = \u0026#34;\u0026#34; # Telegram comments config [params.page.comment.telegram] enable = false siteID = \u0026#34;\u0026#34; limit = 5 height = \u0026#34;\u0026#34; color = \u0026#34;\u0026#34; colorful = true dislikes = false outlined = false # Commento comment config [params.page.comment.commento] enable = false # utterances comment config [params.page.comment.utterances] enable = false # owner/repo repo = \u0026#34;\u0026#34; issueTerm = \u0026#34;pathname\u0026#34; label = \u0026#34;\u0026#34; lightTheme = \u0026#34;github-light\u0026#34; darkTheme = \u0026#34;github-dark\u0026#34; # giscus comment config (https://giscus.app/) [params.page.comment.giscus] # You can refer to the official documentation of giscus to use the following configuration. enable = false repo = \u0026#34;\u0026#34; repoId = \u0026#34;\u0026#34; category = \u0026#34;Announcements\u0026#34; categoryId = \u0026#34;\u0026#34; # automatically adapt the current theme i18n configuration when empty lang = \u0026#34;\u0026#34; mapping = \u0026#34;pathname\u0026#34; reactionsEnabled = \u0026#34;1\u0026#34; emitMetadata = \u0026#34;0\u0026#34; inputPosition = \u0026#34;bottom\u0026#34; lazyLoading = false lightTheme = \u0026#34;light\u0026#34; darkTheme = \u0026#34;dark\u0026#34; # Third-party library config [params.page.library] [params.page.library.css] # someCSS = \u0026#34;some.css\u0026#34; # located in \u0026#34;assets/\u0026#34; # Or # someCSS = \u0026#34;https://cdn.example.com/some.css\u0026#34; [params.page.library.js] # someJavascript = \u0026#34;some.js\u0026#34; # located in \u0026#34;assets/\u0026#34; # Or # someJavascript = \u0026#34;https://cdn.example.com/some.js\u0026#34; # Page SEO config [params.page.seo] # image URL images = [] # Publisher info [params.page.seo.publisher] name = \u0026#34;\u0026#34; logoUrl = \u0026#34;\u0026#34; # TypeIt config [params.typeit] # typing speed between each step (measured in milliseconds) speed = 100 # blinking speed of the cursor (measured in milliseconds) cursorSpeed = 1000 # character used for the cursor (HTML format is supported) cursorChar = \u0026#34;|\u0026#34; # cursor duration after typing finishing (measured in milliseconds, \u0026#34;-1\u0026#34; means unlimited) duration = -1 # Site verification code config for Google/Bing/Yandex/Pinterest/Baidu [params.verification] google = \u0026#34;\u0026#34; bing = \u0026#34;\u0026#34; yandex = \u0026#34;\u0026#34; pinterest = \u0026#34;\u0026#34; baidu = \u0026#34;\u0026#34; # Site SEO config [params.seo] # image URL image = \u0026#34;\u0026#34; # thumbnail URL thumbnailUrl = \u0026#34;\u0026#34; # Analytics config [params.analytics] enable = false # Google Analytics [params.analytics.google] id = \u0026#34;\u0026#34; # whether to anonymize IP anonymizeIP = true # Fathom Analytics [params.analytics.fathom] id = \u0026#34;\u0026#34; # server url for your tracker if you\u0026#39;re self hosting server = \u0026#34;\u0026#34; # Plausible Analytics [params.analytics.plausible] dataDomain = \u0026#34;\u0026#34; # Yandex Metrica [params.analytics.yandexMetrica] id = \u0026#34;\u0026#34; # Cookie consent config [params.cookieconsent] enable = true # text strings used for Cookie consent banner [params.cookieconsent.content] message = \u0026#34;\u0026#34; dismiss = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34; # CDN config for third-party library files [params.cdn] # CDN data file name, disabled by default # [\u0026#34;jsdelivr.yml\u0026#34;] # located in \u0026#34;themes/LoveIt/assets/data/cdn/\u0026#34; directory # you can store your own data files in the same path under your project: # \u0026#34;assets/data/cdn/\u0026#34; data = \u0026#34;\u0026#34; # Compatibility config [params.compatibility] # whether to use Polyfill.io to be compatible with older browsers polyfill = false # whether to use object-fit-images to be compatible with older browsers objectFit = false # Markup related config in Hugo [markup] # Syntax Highlighting [markup.highlight] codeFences = true guessSyntax = true lineNos = true lineNumbersInTable = true # false is a necessary configuration # (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false # Goldmark is from Hugo 0.60 the default library used for Markdown [markup.goldmark] [markup.goldmark.extensions] definitionList = true footnote = true linkify = true strikethrough = true table = true taskList = true typographer = true [markup.goldmark.renderer] # whether to use HTML tags directly in the document unsafe = true # Table Of Contents settings [markup.tableOfContents] startLevel = 2 endLevel = 6 # Sitemap config [sitemap] changefreq = \u0026#34;weekly\u0026#34; filename = \u0026#34;sitemap.xml\u0026#34; priority = 0.5 # Permalinks config [Permalinks] # posts = \u0026#34;:year/:month/:filename\u0026#34; posts = \u0026#34;:filename\u0026#34; # Privacy config [privacy] # privacy of the Google Analytics (replaced by params.analytics.google) [privacy.googleAnalytics] # ... [privacy.twitter] enableDNT = true [privacy.youtube] privacyEnhanced = true # Options to make output .md files [mediaTypes] [mediaTypes.\u0026#34;text/plain\u0026#34;] suffixes = [\u0026#34;md\u0026#34;] # Options to make output .md files [outputFormats.MarkDown] mediaType = \u0026#34;text/plain\u0026#34; isPlainText = true isHTML = false # Options to make hugo output files [outputs] # home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] page = [\u0026#34;HTML\u0026#34;, \u0026#34;MarkDown\u0026#34;] section = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;] taxonomy = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;] taxonomyTerm = [\u0026#34;HTML\u0026#34;] Note Note that some of these parameters are explained in details in other sections of this documentation. Hugo environments Default environments are development with hugo serve and production with hugo.\nDue to limitations in the local development environment, the comment system, CDN and fingerprint will not be enabled in the development environment.\nYou could enable these features with hugo serve -e production.\nTips about CDN Configuration [params.cdn] # CDN data file name, disabled by default # [\u0026#34;jsdelivr.yml\u0026#34;] data = \u0026#34;\u0026#34;The default CDN data file is located in themes/LoveIt/assets/data/cdn/ directory. You can store your own data file in the same path under your project: assets/data/cdn/.\nTips about social Configuration You can directly set your ID to get a default social link and its icon:\n[params.social] Mastodon = \u0026#34;@xxxx\u0026#34;The social link generated is https://mastodon.technology/@xxxx.\nOr You can set more options through a dict:\n[params.social] [params.social.Mastodon] # weight when arranging icons (the greater the weight, the later the icon is positioned) weight = 0 # your social ID id = \u0026#34;@xxxx\u0026#34; # prefix of your social link prefix = \u0026#34;https://mastodon.social/\u0026#34; # content hovering on the icon title = \u0026#34;Mastodon\u0026#34;The default data of all supported social links is located in themes/LoveIt/assets/data/social.yaml, which is you can refer to.\nComplete configuration preview 3.2 Favicons, Browserconfig, Manifest It is recommended to put your own favicons:\napple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/.\nCustomize browserconfig.xml and site.webmanifest to set theme-color and background-color.\n3.3 Style Customization Hugo extended version is necessary Since Hugo need to processes :(fab fa-sass fa-fw): SCSS to :(fab fa-css3 fa-fw): CSS, Hugo extended version is necessary for the style customization. LoveIt theme has been built to be as configurable as possible by defining custom .scss style files.\nThe directory including the custom .scss style files is assets/css relative to your project root directory.\nIn assets/css/_override.scss, you can override the variables in themes/LoveIt/assets/css/_variables.scss to customize the style.\nHere is a example:\n@import url(\u0026#39;https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026amp;display=swap\u0026amp;subset=latin-ext\u0026#39;); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace;In assets/css/_custom.scss, you can add some css style code to customize the style.\n4 Multilingual and i18n LoveIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching.\nLanguage Switch 4.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs Lunr.js Support English en en :(far fa-check-square fa-fw): :(far fa-check-square fa-fw): Simplified Chinese zh-cn zh-CN :(far fa-check-square fa-fw): :(far fa-check-square fa-fw): Traditional Chinese zh-tw zh-TW :(far fa-square fa-fw): :(far fa-check-square fa-fw): French fr fr :(far fa-square fa-fw): :(far fa-check-square fa-fw): Polish pl pl :(far fa-square fa-fw): :(far fa-square fa-fw): Portuguese (Brazil) pt-br pt-BR :(far fa-square fa-fw): :(far fa-check-square fa-fw): Italian it it :(far fa-square fa-fw): :(far fa-check-square fa-fw): Spanish es es :(far fa-square fa-fw): :(far fa-check-square fa-fw): German de de :(far fa-square fa-fw): :(far fa-check-square fa-fw): German de de :(far fa-square fa-fw): :(far fa-check-square fa-fw): Serbian sr sr :(far fa-square fa-fw): :(far fa-square fa-fw): Russian ru ru :(far fa-square fa-fw): :(far fa-check-square fa-fw): Romanian ro ro :(far fa-square fa-fw): :(far fa-check-square fa-fw): Vietnamese vi vi :(far fa-square fa-fw): :(far fa-check-square fa-fw): Arabic ar ar :(far fa-square fa-fw): :(far fa-check-square fa-fw): Catalan ca ca :(far fa-square fa-fw): :(far fa-square fa-fw): Thai th th :(far fa-square fa-fw): :(far fa-check-square fa-fw): Telugu te te :(far fa-square fa-fw): :(far fa-square fa-fw): Indonesian id id :(far fa-square fa-fw): :(far fa-square fa-fw): Turkish tr tr :(far fa-square fa-fw): :(far fa-check-square fa-fw): Korean ko ko :(far fa-square fa-fw): :(far fa-square fa-fw): Hindi hi hi :(far fa-square fa-fw): :(far fa-square fa-fw): Dutch nl nl :(far fa-square fa-fw): :(far fa-check-square fa-fw): 4.2 Basic Configuration After learning how Hugo handle multilingual websites, define your languages in your site configuration.\nFor example with English, Chinese and French website:\n# determines default content language [\u0026#34;en\u0026#34;, \u0026#34;zh-cn\u0026#34;, \u0026#34;fr\u0026#34;, \u0026#34;pl\u0026#34;, ...] defaultContentLanguage = \u0026#34;en\u0026#34; [languages] [languages.en] weight = 1 title = \u0026#34;My New Hugo Site\u0026#34; languageCode = \u0026#34;en\u0026#34; languageName = \u0026#34;English\u0026#34; [[languages.en.menu.main]] weight = 1 identifier = \u0026#34;posts\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Posts\u0026#34; url = \u0026#34;/posts/\u0026#34; title = \u0026#34;\u0026#34; [[languages.en.menu.main]] weight = 2 identifier = \u0026#34;tags\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Tags\u0026#34; url = \u0026#34;/tags/\u0026#34; title = \u0026#34;\u0026#34; [[languages.en.menu.main]] weight = 3 identifier = \u0026#34;categories\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Categories\u0026#34; url = \u0026#34;/categories/\u0026#34; title = \u0026#34;\u0026#34; [languages.zh-cn] weight = 2 title = \u0026#34;我的全新 Hugo 网站\u0026#34; languageCode = \u0026#34;zh-CN\u0026#34; languageName = \u0026#34;简体中文\u0026#34; hasCJKLanguage = true [[languages.zh-cn.menu.main]] weight = 1 identifier = \u0026#34;posts\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;文章\u0026#34; url = \u0026#34;/posts/\u0026#34; title = \u0026#34;\u0026#34; [[languages.zh-cn.menu.main]] weight = 2 identifier = \u0026#34;tags\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;标签\u0026#34; url = \u0026#34;/tags/\u0026#34; title = \u0026#34;\u0026#34; [[languages.zh-cn.menu.main]] weight = 3 identifier = \u0026#34;categories\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;分类\u0026#34; url = \u0026#34;/categories/\u0026#34; title = \u0026#34;\u0026#34; [languages.fr] weight = 3 title = \u0026#34;Mon nouveau site Hugo\u0026#34; languageCode = \u0026#34;fr\u0026#34; languageName = \u0026#34;Français\u0026#34; [[languages.fr.menu.main]] weight = 1 identifier = \u0026#34;posts\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Postes\u0026#34; url = \u0026#34;/posts/\u0026#34; title = \u0026#34;\u0026#34; [[languages.fr.menu.main]] weight = 2 identifier = \u0026#34;tags\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; name = \u0026#34;Balises\u0026#34; url = \u0026#34;/tags/\u0026#34; title = \u0026#34;\u0026#34; [[languages.fr.menu.main]] weight = 3 identifier = \u0026#34;categories\u0026#34; name = \u0026#34;Catégories\u0026#34; pre = \u0026#34;\u0026#34; post = \u0026#34;\u0026#34; url = \u0026#34;/categories/\u0026#34; title = \u0026#34;\u0026#34;Then, for each new page, append the language code to the file name.\nSingle file my-page.md is split in three files:\nin English: my-page.en.md in Chinese: my-page.zh-cn.md in French: my-page.fr.md Note Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. Tip Use Front Matter parameter to translate urls too. 4.3 Overwrite Translation Strings Translations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values.\nTo override these values, create a new file in your local i18n folder i18n/\u0026lt;languageCode\u0026gt;.toml and inspire yourself from themes/LoveIt/i18n/en.toml.\nBy the way, as these translations could be used by other people, please take the time to propose a translation by :(fas fa-code-branch fa-fw): making a PR to the theme!\n5 Search Based on Lunr.js or algolia, searching is supported in LoveIt theme.\n5.1 Output Configuration In order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration.\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;]5.2 Search Configuration Based on index.json generated by Hugo, you could activate searching.\nHere is the search configuration in your site configuration:\n[params.search] enable = true # type of search engine [\u0026#34;lunr\u0026#34;, \u0026#34;algolia\u0026#34;] type = \u0026#34;lunr\u0026#34; # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \u0026#34;\u0026#34; # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \u0026#34;em\u0026#34; # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \u0026#34;\u0026#34; appID = \u0026#34;\u0026#34; searchKey = \u0026#34;\u0026#34; How to choose search engine? The following is a comparison of two search engines:\nlunr: simple, no need to synchronize index.json, no limit for contentLength, but high bandwidth and low performance (Especially for Chinese which needs a large segmentit library) algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag.\nTips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. The official Algolia CLI is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json\u0026hellip; ","date":"2020-03-06T21:29:01+08:00","permalink":"http://localhost:1313/posts/theme-documentation-basics/","title":"Theme Documentation - Basics"},{"content":"Find out how to create and organize your content quickly and intuitively in LoveIt theme.\n1 Contents Organization A few suggestions to help you get a good looking site quickly:\nKeep post pages in the content/posts directory, for example: content/posts/my-first-post.md Keep other pages in the content directory, for example: content/about.md Local resources organization Local Resource Reference There are three ways to reference local resources such as images and music:\nUsing page resources in page bundles. You can reference page resources by the value for Resources.GetMatch or the filepath of the resource relative to the page directory directly. Store resources in the assets directory, which is /assets by default. The filepath of the resource to reference in the post is relative to the assets directory. Store resources in the static directory, which is /static by default. The filepath of the resource to reference in the post is relative to the static directory. The priority of references is also in the above order.\nThere are many places in the theme where the above local resource references can be used, such as links, images, image shortcode, music shortcode and some params in the front matter.\nImages in page resources or assets directory processing will be supported in the future. It\u0026rsquo;s really cool! :(far fa-grin-squint fa-fw):\n2 Front Matter Hugo allows you to add front matter in yaml, toml or json to your content files.\nNote Not all of the below front matters need to be set in each of your posts. It is necessary only if the front matters and the page part in your site configuration are inconsistent. Here is a front matter example:\n--- title: \u0026#34;My First Post\u0026#34; subtitle: \u0026#34;\u0026#34; date: 2020-03-04T15:58:26+08:00 lastmod: 2020-03-04T15:58:26+08:00 draft: true author: \u0026#34;\u0026#34; authorLink: \u0026#34;\u0026#34; description: \u0026#34;\u0026#34; license: \u0026#34;\u0026#34; images: [] tags: [] categories: [] featuredImage: \u0026#34;\u0026#34; featuredImagePreview: \u0026#34;\u0026#34; hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true linkToMarkdown: true rssFullText: false toc: enable: true auto: true code: copy: true maxShownLines: 50 math: enable: false # ... mapbox: # ... share: enable: true # ... comment: enable: true # ... library: css: # someCSS = \u0026#34;some.css\u0026#34; # located in \u0026#34;assets/\u0026#34; # Or # someCSS = \u0026#34;https://cdn.example.com/some.css\u0026#34; js: # someJS = \u0026#34;some.js\u0026#34; # located in \u0026#34;assets/\u0026#34; # Or # someJS = \u0026#34;https://cdn.example.com/some.js\u0026#34; seo: images: [] # ... --- title: the title for the content.\nsubtitle: the subtitle for the content.\ndate: the datetime assigned to this page, which is usually fetched from the date field in front matter, but this behaviour is configurabl in the site configuration.\nlastmod: the datetime at which the content was last modified.\ndraft: if true, the content will not be rendered unless the --buildDrafts/-D flag is passed to the hugo command.\nauthor: the author for the content.\nauthorLink: the link of the author.\ndescription: the description for the content.\nlicense: the special lisence for this content.\nimages: page images for Open Graph and Twitter Cards.\ntags: the tags for the content.\ncategories: the categories for the content.\nfeaturedImage: the featured image for the content.\nfeaturedImagePreview: the featured image for the content preview in the home page.\nhiddenFromHomePage: if true, the content will not be shown in the home page.\nhiddenFromSearch: if true, the content will not be shown in the search results.\ntwemoji: if true, the content will enable the twemoji.\nlightgallery: if true, images in the content will be shown as the gallery.\nruby: if true, the content will enable the ruby extended syntax.\nfraction: if true, the content will enable the fraction extended syntax.\nfontawesome: if true, the content will enable the Font Awesome extended syntax.\nlinkToMarkdown: if true, the footer of the content will be shown the link to the orignal Markdown file.\nrssFullText: if true, the full text content will be shown in RSS.\ntoc: the same as the params.page.toc part in the site configuration.\ncode: the same as the params.page.code part in the site configuration.\nmath: the same as the params.page.math part in the site configuration.\nmapbox: the same as the params.page.mapbox part in the site configuration.\nshare: the same as the params.page.share part in the site configuration.\ncomment: the same as the params.page.comment part in the site configuration.\nlibrary: the same as the params.page.library part in the site configuration.\nseo: the same as the params.page.seo part in the site configuration.\nTip featuredImage and featuredImagePreview support the complete usage of local resource references.\nIf the page resource with name: featured-image or name: featured-image-preview is set in the front matter, it is not necessary to set the parameter featuredImage or featuredImagePreview:\nresources: - name: featured-image src: featured-image.jpg - name: featured-image-preview src: featured-image-preview.jpg 3 Content Summaries LoveIt theme uses the summary of the content to display abstract information in the home page. Hugo can generate summaries of your content.\nSummary Preview Automatic Summary Splitting By default, Hugo automatically takes the first 70 words of your content as its summary.\nYou may customize the summary length by setting summaryLength in the site configuration.\nIf you are creating content in a [CJK]^(Chinese/Japanese/Korean) language and want to use Hugo’s automatic summary splitting, set hasCJKLanguage to true in your site configuration.\nManual Summary Splitting Alternatively, you may add the \u0026lt;!--more--\u0026gt; summary divider where you want to split the article.\nContent that comes before the summary divider will be used as that content’s summary.\nNote Be careful to enter \u0026lt;!--more--\u0026gt; exactly; i.e., all lowercase and with no whitespace. Front Matter Summary You might want your summary to be something other than the text that starts the article. In this case you can provide a separate summary in the summary variable of the article front matter.\nUse Description as Summary You might want your description in the description variable of the article front matter as the summary.\nYou may add the \u0026lt;!--more--\u0026gt; summary divider at the start of the article. Keep content that comes before the summary divider empty. Then LoveIt theme will use your description as the summary.\nPriority Order of Summary Selection Because there are multiple ways in which a summary can be specified it is useful to understand the order. It is as follows:\nIf there is a \u0026lt;!--more--\u0026gt; summary divider present in the article but no content is before the divider, the description will be used as the summary. If there is a \u0026lt;!--more--\u0026gt; summary divider present in the article the text up to the divider will be provided as per the manual summary split method. If there is a summary variable in the article front matter the value of the variable will be provided as per the front matter summary method. The text at the start of the article will be provided as per the automatic summary split method. Note It is not recommended to include rich text block elements in the summary, which will cause typographic errors. Such as code blocks, pictures, tables, etc. 4 Basic Markdown Syntax This part is shown in the basic markdown syntax page.\n5 Extended Markdown Syntax LoveIt theme has some extended syntax elements for you to write articles.\nEmoji Support This part is shown in the emoji support page.\nMathematical Formula LoveIt theme supports mathematical formulas based on $\\KaTeX$.\nSet the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. $\\KaTeX$ automatically renders formulas based on specific delimiters.\nTip Here is a list of $\\TeX$ functions supported by $\\KaTeX$. Note Since Hugo generates HTML documents according to the syntax such as _/*/\u0026gt;\u0026gt; when rendering Markdown documents, and some text content in the form of escape characters (such as \\(/\\)/\\[/\\]/\\\\) escape processing will be performed automatically, therefore, additional escape character expressions are required for these places to achieve automatic rendering:\n_ -\u0026gt; \\_ * -\u0026gt; \\* \u0026gt;\u0026gt; -\u0026gt; \\\u0026gt;\u0026gt; \\( -\u0026gt; \\\\( \\) -\u0026gt; \\\\) \\[ -\u0026gt; \\\\[ \\] -\u0026gt; \\\\] \\\\ -\u0026gt; \\\\\\\\ LoveIt theme supports raw shortcode to avoid these escape characters, which helps you write raw mathematical formula content.\nExample raw input:\nInline Formula: {?{}{\u0026lt; raw \u0026gt;}}\\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\){?{}{\u0026lt; /raw \u0026gt;}} Block Formula: {?{}{\u0026lt; raw \u0026gt;}} \\[ a=b+c \\\\ d+e=f \\] {?{}{\u0026lt; /raw \u0026gt;}}The rendered output looks like this:\nInline Formula: Block Formula:\nInline Formula The default inline delimiters are:\n$ ... $ \\( ... \\) (escaped: \\\\( ... \\\\)) For example:\n$c = \\pm\\sqrt{a^2 + b^2}$ and \\\\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\\\)The rendered output looks like this:\n$c = \\pm\\sqrt{a^2 + b^2}$ and \\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\)\nBlock Formula The default block delimiters are:\n$$ ... $$ \\[ ... \\] (escaped: \\\\[ ... \\\\]) \\begin{equation} ... \\end{equation} (unnumbered: \\begin{equation*} ... \\end{equation*}) \\begin{align} ... \\end{align} (unnumbered: \\begin{align*} ... \\end{align*}) \\begin{alignat} ... \\end{alignat} (unnumbered: \\begin{alignat*} ... \\end{alignat*}) \\begin{gather} ... \\end{gather} (unnumbered: \\begin{gather*} ... \\end{gather*}) \\begin{CD} ... \\end{CD} For example:\n$$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}\\_{i}=\\mathbf{E}\\_{1}+\\mathbf{E}\\_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026amp;=b+c \\\\\\\\ d+e\u0026amp;=f \\end{align} \\begin{alignat}{2} 10\u0026amp;x+\u0026amp;3\u0026amp;y = 2 \\\\\\\\ 3\u0026amp;x+\u0026amp;13\u0026amp;y = 4 \\end{alignat} \\begin{gather} a=b \\\\\\\\ e=b+c \\end{gather} \\begin{CD} A @\u0026gt;a\\\u0026gt;\u0026gt; B \\\\\\\\ @VbVV @AAcA \\\\\\\\ C @= D \\end{CD}The rendered output looks like this:\n$$ c = \\pm\\sqrt{a^2 + b^2} $$\n\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\]\n\\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*}\n\\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation}\n\\begin{align} a\u0026amp;=b+c \\\\ d+e\u0026amp;=f \\end{align}\n\\begin{alignat}{2} 10\u0026amp;x+\u0026amp;3\u0026amp;y = 2 \\\\ 3\u0026amp;x+\u0026amp;13\u0026amp;y = 4 \\end{alignat}\n\\begin{gather} a=b \\\\ e=b+c \\end{gather}\n\\begin{CD} A @\u0026gt;a\u0026gt;\u0026gt; B \\\\ @VbVV @AAcA \\\\ C @= D \\end{CD}\nTip You can add more inline and block delimiters in your site configuration. Copy-tex Copy-tex is an extension for $\\KaTeX$.\nBy the extension, when selecting and copying $\\KaTeX$ rendered elements, copies their $\\LaTeX$ source to the clipboard.\nSet the property copyTex = true under [params.math] in your site configuration to enable Copy-tex.\nSelect and copy the formula rendered in the previous section, and you can find that the copied content is the $\\LaTeX$ source code.\nmhchem mhchem is an extension for $\\KaTeX$.\nBy the extension, you can write beautiful chemical equations easily in the article.\nSet the property mhchem = true under [params.math] in your site configuration to enable mhchem.\n$$ \\ce{CO2 + C -\u0026gt; 2 CO} $$ $$ \\ce{Hg^2+ -\u0026gt;[I-] HgI2 -\u0026gt;[I-] [Hg^{II}I4]^2-} $$The rendered output looks like this:\n$$ \\ce{CO2 + C -\u0026gt; 2 CO} $$\n$$ \\ce{Hg^2+ -\u0026gt;[I-] HgI2 -\u0026gt;[I-] [Hg^{II}I4]^2-} $$\nRuby Annotation An extended Markdown syntax for ruby annotation is supported in LoveIt theme:\n[Hugo]{?^}(An open-source static site generator)The rendered output looks like this:\n[Hugo]^(An open-source static site generator)\nFraction An extended Markdown syntax for fraction is supported in LoveIt theme:\n[Light]{?/}[Dark] [99]{?/}[100]The rendered output looks like this:\n[Light]/[Dark]\n[90]/[100]\nFont Awesome LoveIt theme uses Font Awesome as the icon library. You can easily use these icons in your articles.\nGet the class of icons you wanted from the Font Awesome website.\nGone camping! {?:}(fas fa-campground fa-fw): Be back soon. That is so funny! {?:}(far fa-grin-tears):The rendered output looks like this:\nGone camping! :(fas fa-campground fa-fw): Be back soon.\nThat is so funny! :(far fa-grin-tears):\nEscape character In some special cases (when writing this theme documentation :(far fa-grin-squint-tears):), your content will conflict with basic or extended Markdown syntax, and it is inevitable.\nThe escape character syntax can help you build the content you wanted:\n{{??}X} -\u0026gt; XFor example, two : will enable emoji syntax, which is not the behavior you want. The escape character syntax is like this:\n{{??}:}joy:The rendered output looks like this:\n{?:}joy{?:} instead of :joy:\nTip This is related to an issue for Hugo, which has not been resolved. Another example is:\n[link{{??}]}(#escape-character)The rendered output looks like this:\n[link{?]}(#escape-character) instead of link.\n","date":"2020-03-05T15:58:26+08:00","permalink":"http://localhost:1313/posts/theme-documentation-content/","title":"Theme Documentation - Content"},{"content":"Hugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean.\nHugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.\nBut this happens to be a bad idea. Everyone uses Markdown because it’s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible.\nTo avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet that can generate reasonable HTML code and conforms to Markdown\u0026rsquo;s design philosophy.\nHugo ships with a set of predefined shortcodes that represent very common usage. These shortcodes are provided for author convenience and to keep your markdown content clean.\n1 figure Documentation of figure\nExample figure input:\n{{\u0026lt; figure src=\u0026#34;/images/lighthouse.jpg\u0026#34; title=\u0026#34;Lighthouse (figure)\u0026#34; \u0026gt;}}The rendered output looks like this:\nLighthouse (figure) The HTML looks like this:\n\u0026lt;figure\u0026gt; \u0026lt;img src=\u0026#34;/images/lighthouse.jpg\u0026#34;/\u0026gt; \u0026lt;figcaption\u0026gt; \u0026lt;h4\u0026gt;Lighthouse (figure)\u0026lt;/h4\u0026gt; \u0026lt;/figcaption\u0026gt; \u0026lt;/figure\u0026gt;2 gist Documentation of gist\nExample gist input:\n{{\u0026lt; gist spf13 7896402 \u0026gt;}}The rendered output looks like this:\nThe HTML looks like this:\n\u0026lt;script type=\u0026#34;application/javascript\u0026#34; src=\u0026#34;https://gist.github.com/spf13/7896402.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;3 highlight Documentation of highlight\nExample highlight input:\n{{\u0026lt; highlight html \u0026gt;}} \u0026lt;section id=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h1 id=\u0026#34;title\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ range .Pages }} {{ .Render \u0026#34;summary\u0026#34;}} {{ end }} \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; {{\u0026lt; /highlight \u0026gt;}}The rendered output looks like this:\n\u0026lt;section id=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h1 id=\u0026#34;title\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ range .Pages }} {{ .Render \u0026#34;summary\u0026#34;}} {{ end }} \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; 4 instagram Documentation of instagram\nInstagram’s API was deprecated since October 24th, 2020 The instagram-shortcode refers an endpoint of Instagram’s API, that’s deprecated since October 24th, 2020. Thus, no images can be fetched from this API endpoint, resulting in an error when the instagram-shortcode is used. For more information please have a look at GitHub issue #7879. 5 param Documentation of param\nExample param input:\n{{\u0026lt; param description \u0026gt;}}The rendered output looks like this:\nHugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean. 6 ref and relref Documentation of ref and relref\n7 tweet Documentation of tweet\nExample tweet input:\n{{\u0026lt; tweet user=GoHugoIO id=917359331535966209 \u0026gt;}}The rendered output looks like this:\n8 vimeo Documentation of vimeo\nExample vimeo input:\n{{\u0026lt; vimeo 146022717 \u0026gt;}}The rendered output looks like this:\n9 youtube Documentation of youtube\nExample youtube input:\n{{\u0026lt; youtube w7Ft2ymGmfc \u0026gt;}}The rendered output looks like this:\n","date":"2020-03-04T16:29:41+08:00","permalink":"http://localhost:1313/posts/theme-documentation-built-in-shortcodes/","title":"Theme Documentation - Built-in Shortcodes"},{"content":"LoveIt theme provides multiple shortcodes on top of built-in ones in Hugo.\n1 style Note Hugo extended version is necessary for style shortcode. style is a shortcode to insert custom style in your post.\nThe style shortcode has two positional parameters.\nThe first one is the custom style content, which supports nesting syntax in :(fab fa-sass fa-fw): SASS and \u0026amp; referring to this parent HTML element.\nAnd the second one is the tag name of the HTML element wrapping the content you want to change style, and whose default value is div.\nExample style input:\n{{\u0026lt; style \u0026#34;text-align:right; strong{color:#00b1ff;}\u0026#34; \u0026gt;}} This is a **right-aligned** paragraph. {{\u0026lt; /style \u0026gt;}}The rendered output looks like this:\nThis is a right-aligned paragraph. 2 link link shortcode is an alternative to Markdown link syntax. link shortcode can provide some other features and can be used in code blocks.\nThe complete usage of local resource references is supported.\nThe link shortcode has the following named parameters:\nhref [required] (first positional parameter)\nDestination of the link.\ncontent [optional] (second positional parameter)\nContent of the link, default value is the value of href parameter.\nMarkdown or HTML format is supported.\ntitle [optional] (third positional parameter)\ntitle attribute of the HTML a tag, which will be shown when hovering on the link.\nclass [optional]\nclass attribute of the HTML a tag.\nrel [optional]\nAdditional rel attributes of the HTML a tag.\nExample link input:\n{{\u0026lt; link \u0026#34;https://assemble.io\u0026#34; \u0026gt;}} Or {{\u0026lt; link href=\u0026#34;https://assemble.io\u0026#34; \u0026gt;}} {{\u0026lt; link \u0026#34;mailto:contact@revolunet.com\u0026#34; \u0026gt;}} Or {{\u0026lt; link href=\u0026#34;mailto:contact@revolunet.com\u0026#34; \u0026gt;}} {{\u0026lt; link \u0026#34;https://assemble.io\u0026#34; Assemble \u0026gt;}} Or {{\u0026lt; link href=\u0026#34;https://assemble.io\u0026#34; content=Assemble \u0026gt;}}The rendered output looks like this:\nhttps://assemble.io mailto:contact@revolunet.com Assemble Example link input with a title:\n{{\u0026lt; link \u0026#34;https://github.com/upstage/\u0026#34; Upstage \u0026#34;Visit Upstage!\u0026#34; \u0026gt;}} Or {{\u0026lt; link href=\u0026#34;https://github.com/upstage/\u0026#34; content=Upstage title=\u0026#34;Visit Upstage!\u0026#34; \u0026gt;}}The rendered output looks like this (hover over the link, there should be a tooltip):\nUpstage 3 image image shortcode is an alternative to figure shortcode. image shortcode can take full advantage of the dependent libraries of lazysizes and lightGallery.\nThe complete usage of local resource references is supported.\nThe image shortcode has the following named parameters:\nsrc [required] (first positional parameter)\nURL of the image to be displayed.\nalt [optional] (second positional parameter)\nAlternate text for the image if the image cannot be displayed, default value is the value of src parameter.\nMarkdown or HTML format is supported.\ncaption [optional] (third positional parameter)\nImage caption.\nMarkdown or HTML format is supported.\ntitle [optional]\nImage title that will be shown when hovering on the image.\nclass [optional]\nclass attribute of the HTML figure tag.\nsrc_s [optional]\nURL of the image thumbnail, used for lightgallery, default value is the value of src parameter.\nsrc_l [optional]\nURL of the HD image, used for lightgallery, default value is the value of src parameter.\nheight [optional]\nheight attribute of the image.\nwidth [optional]\nwidth attribute of the image.\nlinked [optional]\nWhether the image needs to be hyperlinked, default value is true.\nrel [optional]\nAdditional rel attributes of the HTML a tag, if linked parameter is set to true.\nExample image input:\n{{\u0026lt; image src=\u0026#34;/images/lighthouse.jpg\u0026#34; caption=\u0026#34;Lighthouse (`image`)\u0026#34; src_s=\u0026#34;/images/lighthouse-small.jpg\u0026#34; src_l=\u0026#34;/images/lighthouse-large.jpg\u0026#34; \u0026gt;}}The rendered output looks like this:\nLighthouse (image) 4 admonition The admonition shortcode supports 12 types of banners to help you put notice in your page.\nMarkdown or HTML format in the content is supported.\nNote A note banner Abstract An abstract banner Info A info banner Tip A tip banner Success A success banner Question A question banner Warning A warning banner Failure A failure banner Danger A danger banner Bug A bug banner Example An example banner Quote A quote banner The admonition shortcode has the following named parameters:\ntype [optional] (first positional parameter)\nType of the admonition banner, default value is note.\ntitle [optional] (second positional parameter)\nTitle of the admonition banner, default value is the value of type parameter.\nopen [optional] (third positional parameter) Whether the content will be expandable by default, default value is true.\nExample admonition input:\n{{\u0026lt; admonition type=tip title=\u0026#34;This is a tip\u0026#34; open=false \u0026gt;}} A **tip** banner {{\u0026lt; /admonition \u0026gt;}} Or {{\u0026lt; admonition tip \u0026#34;This is a tip\u0026#34; false \u0026gt;}} A **tip** banner {{\u0026lt; /admonition \u0026gt;}}The rendered output looks like this:\nThis is a tip A tip banner 5 mermaid The mermaid shortcode supports diagrams in Hugo with Mermaid library.\nThe full documentation is provided in Theme Documentation - mermaid Shortcode.\n6 echarts The echarts shortcode supports data visualization in Hugo with ECharts library.\nThe full documentation is provided in Theme Documentation - echarts Shortcode.\n7 mapbox The mapbox shortcode supports interactive maps in Hugo with Mapbox GL JS library.\nThe full documentation is provided in Theme Documentation - mapbox Shortcode.\n8 music The music shortcode embeds a responsive music player based on APlayer and MetingJS library.\nThe full documentation is provided in Theme Documentation - music Shortcode.\n9 bilibili The bilibili shortcode embeds a responsive video player for bilibili videos.\nThe full documentation is provided in Theme Documentation - bilibili Shortcode.\n10 typeit The typeit shortcode provides typing animation based on TypeIt library.\nThe full documentation is provided in Theme Documentation - typeit Shortcode.\n11 script script is a shortcode to insert custom :(fab fa-js fa-fw): Javascript in your post.\nNote The script content can be guaranteed to be executed in order after all third-party libraries are loaded. So you are free to use third-party libraries. Example script input:\n{{\u0026lt; script \u0026gt;}} console.log(\u0026#39;Hello LoveIt!\u0026#39;); {{\u0026lt; /script \u0026gt;}}You can see the output in the console of the developer tool.\n12 raw raw is a shortcode to insert raw :(fab fa-html5 fa-fw): HTML content in your post. This is useful when you want to include some Markdown content to avoid being rendered or escaped by Hugo.\nExample raw input:\nInline Formula: {{\u0026lt; raw \u0026gt;}}\\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\){{\u0026lt; /raw \u0026gt;}} Block Formula: {{\u0026lt; raw \u0026gt;}} \\[ a=b+c \\\\ d+e=f \\] {{\u0026lt; /raw \u0026gt;}} Raw content using Markdown syntax: {{\u0026lt; raw \u0026gt;}}**Hello**{{\u0026lt; /raw \u0026gt;}}The rendered output looks like this:\nInline Formula: Block Formula:\nRaw content using Markdown syntax: 13 person person is a shortcode to insert a link to a personal webpage marked up as h-card.\nThe person shortcode has the following named parameters:\nurl [required] (first positional parameter)\nURL of the personal page.\nname [required] (second positional parameter)\nName of the person.\ntext [optional] (third positional parameter)\nText to display as hover tooltip of the link.\npicture [optional] (fourth positional parameter)\nA picture to use as person\u0026rsquo;s avatar.\nnick [optional]\nNickame of the person.\nExample person input:\n{{\u0026lt; person url=\u0026#34;https://evgenykuznetsov.org\u0026#34; name=\u0026#34;Evgeny Kuznetsov\u0026#34; nick=\u0026#34;nekr0z\u0026#34; text=\u0026#34;author of this shortcode\u0026#34; picture=\u0026#34;https://evgenykuznetsov.org/img/avatar.jpg\u0026#34; \u0026gt;}}This renders as \u0026#8201;Evgeny Kuznetsov (nekr0z).\nWithout an explicitly given picture, a generic icon is used. This input:\n{{\u0026lt; person \u0026#34;https://dillonzq.com/\u0026#34; Dillon \u0026#34;author of the LoveIt theme\u0026#34; \u0026gt;}}This renders as \u0026#8201;Dillon.\n","date":"2020-03-03T16:29:41+08:00","permalink":"http://localhost:1313/posts/theme-documentation-extended-shortcodes/","title":"Theme Documentation - Extended Shortcodes"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files.\nNote This article is a shameful copy of the great Grav original page.\nIf you want to know about the extended Markdown syntax of LoveIt theme, please read extended Markdown syntax page.\nLet\u0026rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.\nMarkdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.\nSome of the key benefits are:\nMarkdown is simple to learn, with minimal extra characters, so it\u0026rsquo;s also quicker to write content. Less chance of errors when writing in Markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use! John Gruber, the author of Markdown, puts it like this:\nThe overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email.\n\u0026ndash; John Gruber Without further delay, let us go over the main elements of Markdown and what the resulting HTML looks like!\nTip :(far fa-bookmark fa-fw): Bookmark this page for easy future reference! 1 Headings Headings from h2 through h6 are constructed with a # for each level:\n## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 HeadingThe HTML looks like this:\n\u0026lt;h2\u0026gt;h2 Heading\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;h3 Heading\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;h4 Heading\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;h5 Heading\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;h6 Heading\u0026lt;/h6\u0026gt; Heading IDs To add a custom heading ID, enclose the custom ID in curly braces on the same line as the heading:\n### A Great Heading {#custom-id}The HTML looks like this:\n\u0026lt;h3 id=\u0026#34;custom-id\u0026#34;\u0026gt;A Great Heading\u0026lt;/h3\u0026gt; 2 Comments Comments should be HTML compatible.\n\u0026lt;!-- This is a comment --\u0026gt;Comment below should NOT be seen:\n3 Horizontal Rules The HTML \u0026lt;hr\u0026gt; element is for creating a \u0026ldquo;thematic break\u0026rdquo; between paragraph-level elements. In Markdown, you can create a \u0026lt;hr\u0026gt; with any of the following:\n___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks The rendered output looks like this:\n4 Body Copy Body copy written as normal, plain text will be wrapped with \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; tags in the rendered HTML.\nSo this body copy:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.The HTML looks like this:\n\u0026lt;p\u0026gt;Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u0026lt;/p\u0026gt;A line break can be done with one blank line.\n5 Inline HTML If you need a certain HTML tag (with a class) you can simply use HTML:\nParagraph in Markdown. \u0026lt;div class=\u0026#34;class\u0026#34;\u0026gt; This is \u0026lt;b\u0026gt;HTML\u0026lt;/b\u0026gt; \u0026lt;/div\u0026gt; Paragraph in Markdown.6 Emphasis Bold For emphasizing a snippet of text with a heavier font-weight.\nThe following snippet of text is rendered as bold text.\n**rendered as bold text** __rendered as bold text__The HTML looks like this:\n\u0026lt;strong\u0026gt;rendered as bold text\u0026lt;/strong\u0026gt;Italics For emphasizing a snippet of text with italics.\nThe following snippet of text is rendered as italicized text.\n*rendered as italicized text* _rendered as italicized text_The HTML looks like this:\n\u0026lt;em\u0026gt;rendered as italicized text\u0026lt;/em\u0026gt;Strikethrough In [GFM]^(GitHub flavored Markdown) you can do strikethroughs.\n~~Strike through this text.~~The rendered output looks like this:\nStrike through this text.\nThe HTML looks like this:\n\u0026lt;del\u0026gt;Strike through this text.\u0026lt;/del\u0026gt;Combination Bold, italics, and strikethrough can be used in combination.\n***bold and italics*** ~~**strikethrough and bold**~~ ~~*strikethrough and italics*~~ ~~***bold, italics and strikethrough***~~The rendered output looks like this:\nbold and italics\nstrikethrough and bold\nstrikethrough and italics\nbold, italics and strikethrough\nThe HTML looks like this:\n\u0026lt;em\u0026gt;\u0026lt;strong\u0026gt;bold and italics\u0026lt;/strong\u0026gt;\u0026lt;/em\u0026gt; \u0026lt;del\u0026gt;\u0026lt;strong\u0026gt;strikethrough and bold\u0026lt;/strong\u0026gt;\u0026lt;/del\u0026gt; \u0026lt;del\u0026gt;\u0026lt;em\u0026gt;strikethrough and italics\u0026lt;/em\u0026gt;\u0026lt;/del\u0026gt; \u0026lt;del\u0026gt;\u0026lt;em\u0026gt;\u0026lt;strong\u0026gt;bold, italics and strikethrough\u0026lt;/strong\u0026gt;\u0026lt;/em\u0026gt;\u0026lt;/del\u0026gt;7 Blockquotes For quoting blocks of content from another source within your document.\nAdd \u0026gt; before any text you want to quote:\n\u0026gt; **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.The rendered output looks like this:\nFusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\nThe HTML looks like this:\n\u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;Fusion Drive\u0026lt;/strong\u0026gt; combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt;Blockquotes can also be nested:\n\u0026gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u0026gt;\u0026gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.The rendered output looks like this:\nDonec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\nSed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\n8 Lists Unordered A list of items in which the order of the items does not explicitly matter.\nYou may use any of the following symbols to denote bullets for each list item:\n* valid bullet - valid bullet + valid bulletFor example:\n* Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor loremThe rendered output looks like this:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this:\n\u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Phasellus iaculis neque\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Purus sodales ultricies\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vestibulum laoreet porttitor sem\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Ac tristique libero volutpat at\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;Ordered A list of items in which the order of items does explicitly matter.\n1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor loremThe rendered output looks like this:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this:\n\u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; Tip If you just use 1. for each number, Markdown will automatically number each item. For example:\n1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor loremThe rendered output looks like this:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Task Lists Task lists allow you to create a list of items with checkboxes. To create a task list, add dashes (-) and brackets with a space ([ ]) before task list items. To select a checkbox, add an x in between the brackets ([x]).\n- [x] Write the press release - [ ] Update the website - [ ] Contact the mediaThe rendered output looks like this:\nWrite the press release Update the website Contact the media 9 Code Inline Code Wrap inline snippets of code with `.\nIn this example, `\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;` should be wrapped as **code**.The rendered output looks like this:\nIn this example, \u0026lt;section\u0026gt;\u0026lt;/section\u0026gt; should be wrapped as code.\nThe HTML looks like this:\n\u0026lt;p\u0026gt; In this example, \u0026lt;code\u0026gt;\u0026amp;lt;section\u0026amp;gt;\u0026amp;lt;/section\u0026amp;gt;\u0026lt;/code\u0026gt; should be wrapped with \u0026lt;strong\u0026gt;code\u0026lt;/strong\u0026gt;. \u0026lt;/p\u0026gt;Indented Code Or indent several lines of code by at least four spaces, as in:\n// Some comments line 1 of code line 2 of code line 3 of codeThe rendered output looks like this:\n// Some comments line 1 of code line 2 of code line 3 of code The HTML looks like this:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt; // Some comments line 1 of code line 2 of code line 3 of code \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt;Block Fenced Code Use \u0026ldquo;fences\u0026rdquo; ``` to block in multiple lines of code with a language attribute.\n```markdown Sample text here... ``` The HTML looks like this:\n\u0026lt;pre language-html\u0026gt; \u0026lt;code\u0026gt;Sample text here...\u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt;Syntax Highlighting [GFM]^(GitHub Flavored Markdown) also supports syntax highlighting.\nTo activate it, simply add the file extension of the language you want to use directly after the first code \u0026ldquo;fence\u0026rdquo;, ```js, and syntax highlighting will automatically be applied in the rendered HTML.\nFor example, to apply syntax highlighting to JavaScript code:\n```js grunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; ``` The rendered output looks like this:\ngrunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; Note Syntax highlighting page in Hugo Docs introduces more about syntax highlighting, including highlight shortcode. 10 Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned.\n| Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. |The rendered output looks like this:\nOption Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. The HTML looks like this:\n\u0026lt;table\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Option\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Description\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;data\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;path to data files to supply the data that will be passed into templates.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;engine\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;engine to be used for processing templates. Handlebars is the default.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;ext\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;extension to be used for dest files.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; Right or center aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column.\nAdding colons on both sides of the dashes below any heading will center align text for that column.\n| Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. |The rendered output looks like this:\nOption Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 11 Links Basic Link \u0026lt;https://assemble.io\u0026gt; \u0026lt;contact@revolunet.com\u0026gt; [Assemble](https://assemble.io)The rendered output looks like this (hover over the link, there is no tooltip):\nhttps://assemble.io\ncontact@revolunet.com\nAssemble\nThe HTML looks like this:\n\u0026lt;a href=\u0026#34;https://assemble.io\u0026#34;\u0026gt;https://assemble.io\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;mailto:contact@revolunet.com\u0026#34;\u0026gt;contact@revolunet.com\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;https://assemble.io\u0026#34;\u0026gt;Assemble\u0026lt;/a\u0026gt;Add a Title [Upstage](https://github.com/upstage/ \u0026#34;Visit Upstage!\u0026#34;)The rendered output looks like this (hover over the link, there should be a tooltip):\nUpstage\nThe HTML looks like this:\n\u0026lt;a href=\u0026#34;https://github.com/upstage/\u0026#34; title=\u0026#34;Visit Upstage!\u0026#34;\u0026gt;Upstage\u0026lt;/a\u0026gt;Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters:\n## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3)will jump to these sections:\n## Chapter 1 \u0026lt;a id=\u0026#34;chapter-1\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 2 \u0026lt;a id=\u0026#34;chapter-2\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 3 \u0026lt;a id=\u0026#34;chapter-3\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. Note The specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works. 12 Footnotes Footnotes allow you to add notes and references without cluttering the body of the document. When you create a footnote, a superscript number with a link appears where you added the footnote reference. Readers can click the link to jump to the content of the footnote at the bottom of the page.\nTo create a footnote reference, add a caret and an identifier inside brackets ([^1]). Identifiers can be numbers or words, but they can’t contain spaces or tabs. Identifiers only correlate the footnote reference with the footnote itself — in the output, footnotes are numbered sequentially.\nAdd the footnote using another caret and number inside brackets with a colon and text ([^1]: My footnote.). You don’t have to put footnotes at the end of the document. You can put them anywhere except inside other elements like lists, block quotes, and tables.\nThis is a digital footnote[^1]. This is a footnote with \u0026#34;label\u0026#34;[^label] [^1]: This is a digital footnote [^label]: This is a footnote with \u0026#34;label\u0026#34;This is a digital footnote1.\nThis is a footnote with \u0026ldquo;label\u0026rdquo;2\n13 Images Images have a similar syntax to links but include a preceding exclamation point.\n![Minion](https://octodex.github.com/images/minion.png)\nor:\n![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \u0026#34;The Stormtroopocat\u0026#34;) The Stormtroopocat Like links, images also have a footnote style syntax:\n![Alt text][id] The Dojocat With a reference later in the document defining the URL location:\n[id]: https://octodex.github.com/images/dojocat.jpg \u0026#34;The Dojocat\u0026#34; Tip LoveIt theme has special shortcode for image, which provides more features. This is a digital footnote\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThis is a footnote with \u0026ldquo;label\u0026rdquo;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-12-01T21:57:40+08:00","permalink":"http://localhost:1313/posts/basic-markdown-syntax/","title":"Basic Markdown Syntax"},{"content":" The mermaid shortcode supports diagrams in Hugo with Mermaid library.\nMermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.\nJust insert your mermaid code in the mermaid shortcode and that’s it.\nFlowchart Example flowchart mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nSequence Diagram Example sequence diagram mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nGantt Example Gantt mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nClass Diagram Example class diagram mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} classDiagram Animal \u0026lt;|-- Duck Animal \u0026lt;|-- Fish Animal \u0026lt;|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nState Diagram Example state diagram mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} stateDiagram-v2 [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nGit Graph Example git graph mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} gitGraph commit commit branch develop checkout develop commit commit checkout main merge develop commit commit {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nEntity Relationship Diagram Example entity-relationship diagram mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nUser Journey Example user journey mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nPie Chart Example pie chart mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} pie \u0026#34;Dogs\u0026#34; : 386 \u0026#34;Cats\u0026#34; : 85 \u0026#34;Rats\u0026#34; : 15 {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\nRequirement Diagram Example requirement diagram mermaid input:\n{{\u0026lt; mermaid \u0026gt;}} requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } element test_entity { type: simulation } test_entity - satisfies -\u0026gt; test_req {{\u0026lt; /mermaid \u0026gt;}}The rendered output looks like this:\n","date":"2020-03-03T15:29:41+08:00","permalink":"http://localhost:1313/posts/theme-documentation-mermaid-shortcode/","title":"Theme Documentation - mermaid Shortcode"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site configuration and then you can type emoji shorthand codes directly in content files.\nThese begin and end with a colon and include the code of an emoji:\nGone camping! {?:}tent: Be back soon. That is so funny! {?:}joy:The rendered output looks like this:\nGone camping! :tent: Be back soon.\nThat is so funny! :joy:\nThe following cheat sheet is a useful reference for emoji shorthand codes.\nSmileys \u0026amp; Emotion Face Smiling icon code icon code :grinning: grinning :smiley: smiley :smile: smile :grin: grin :laughing: laughing satisfied :sweat_smile: sweat_smile :rofl: rofl :joy: joy :slightly_smiling_face: slightly_smiling_face :upside_down_face: upside_down_face :wink: wink :blush: blush :innocent: innocent Face Affection icon code icon code :heart_eyes: heart_eyes :kissing_heart: kissing_heart :kissing: kissing :relaxed: relaxed :kissing_closed_eyes: kissing_closed_eyes :kissing_smiling_eyes: kissing_smiling_eyes Face Tongue icon code icon code :yum: yum :stuck_out_tongue: stuck_out_tongue :stuck_out_tongue_winking_eye: stuck_out_tongue_winking_eye :stuck_out_tongue_closed_eyes: stuck_out_tongue_closed_eyes :money_mouth_face: money_mouth_face Face Hand icon code icon code :hugs: hugs :thinking: thinking Face Neutral Skeptical icon code icon code :zipper_mouth_face: zipper_mouth_face :neutral_face: neutral_face :expressionless: expressionless :no_mouth: no_mouth :smirk: smirk :unamused: unamused :roll_eyes: roll_eyes :grimacing: grimacing :lying_face: lying_face Face Sleepy icon code icon code :relieved: relieved :pensive: pensive :sleepy: sleepy :drooling_face: drooling_face :sleeping: sleeping Face Unwell icon code icon code :mask: mask :face_with_thermometer: face_with_thermometer :face_with_head_bandage: face_with_head_bandage :nauseated_face: nauseated_face :sneezing_face: sneezing_face :dizzy_face: dizzy_face Face Hat icon code icon code :cowboy_hat_face: cowboy_hat_face Face Glasses icon code icon code :sunglasses: sunglasses :nerd_face: nerd_face Face Concerned icon code icon code :confused: confused :worried: worried :slightly_frowning_face: slightly_frowning_face :frowning_face: frowning_face :open_mouth: open_mouth :hushed: hushed :astonished: astonished :flushed: flushed :frowning: frowning :anguished: anguished :fearful: fearful :cold_sweat: cold_sweat :disappointed_relieved: disappointed_relieved :cry: cry :sob: sob :scream: scream :confounded: confounded :persevere: persevere :disappointed: disappointed :sweat: sweat :weary: weary :tired_face: tired_face Face Negative icon code icon code :triumph: triumph :pout: pout rage :angry: angry :smiling_imp: smiling_imp :imp: imp :skull: skull :skull_and_crossbones: skull_and_crossbones Face Costume icon code icon code :hankey: hankey poop shit :clown_face: clown_face :japanese_ogre: japanese_ogre :japanese_goblin: japanese_goblin :ghost: ghost :alien: alien :space_invader: space_invader :robot: robot Cat Face icon code icon code :smiley_cat: smiley_cat :smile_cat: smile_cat :joy_cat: joy_cat :heart_eyes_cat: heart_eyes_cat :smirk_cat: smirk_cat :kissing_cat: kissing_cat :scream_cat: scream_cat :crying_cat_face: crying_cat_face :pouting_cat: pouting_cat Monkey Face icon code icon code :see_no_evil: see_no_evil :hear_no_evil: hear_no_evil :speak_no_evil: speak_no_evil Emotion icon code icon code :kiss: kiss :love_letter: love_letter :cupid: cupid :gift_heart: gift_heart :sparkling_heart: sparkling_heart :heartpulse: heartpulse :heartbeat: heartbeat :revolving_hearts: revolving_hearts :two_hearts: two_hearts :heart_decoration: heart_decoration :heavy_heart_exclamation: heavy_heart_exclamation :broken_heart: broken_heart :heart: heart :yellow_heart: yellow_heart :green_heart: green_heart :blue_heart: blue_heart :purple_heart: purple_heart :black_heart: black_heart :100: 100 :anger: anger :boom: boom collision :dizzy: dizzy :sweat_drops: sweat_drops :dash: dash :hole: hole :bomb: bomb :speech_balloon: speech_balloon :eye_speech_bubble: eye_speech_bubble :right_anger_bubble: right_anger_bubble :thought_balloon: thought_balloon :zzz: zzz People \u0026amp; Body Hand Fingers Open icon code icon code :wave: wave :raised_back_of_hand: raised_back_of_hand :raised_hand_with_fingers_splayed: raised_hand_with_fingers_splayed :hand: hand raised_hand :vulcan_salute: vulcan_salute Hand Fingers Partial icon code icon code :ok_hand: ok_hand :v: v :crossed_fingers: crossed_fingers :metal: metal :call_me_hand: call_me_hand Hand Single Finger icon code icon code :point_left: point_left :point_right: point_right :point_up_2: point_up_2 :fu: fu middle_finger :point_down: point_down :point_up: point_up Hand Fingers Closed icon code icon code :+1: +1 thumbsup :-1: -1 thumbsdown :fist: fist fist_raised :facepunch: facepunch fist_oncoming punch :fist_left: fist_left :fist_right: fist_right Hands icon code icon code :clap: clap :raised_hands: raised_hands :open_hands: open_hands :handshake: handshake :pray: pray Hand Prop icon code icon code :writing_hand: writing_hand :nail_care: nail_care :selfie: selfie Body Parts icon code icon code :muscle: muscle :ear: ear :nose: nose :eyes: eyes :eye: eye :tongue: tongue :lips: lips Person icon code icon code :baby: baby :boy: boy :girl: girl :blonde_man: blonde_man person_with_blond_hair :man: man :woman: woman :blonde_woman: blonde_woman :older_man: older_man :older_woman: older_woman Person Gesture icon code icon code :frowning_woman: frowning_woman person_frowning :frowning_man: frowning_man :person_with_pouting_face: person_with_pouting_face pouting_woman :pouting_man: pouting_man :ng_woman: ng_woman no_good no_good_woman :ng_man: ng_man no_good_man :ok_woman: ok_woman :ok_man: ok_man :information_desk_person: information_desk_person sassy_woman tipping_hand_woman :sassy_man: sassy_man tipping_hand_man :raising_hand: raising_hand raising_hand_woman :raising_hand_man: raising_hand_man :bow: bow bowing_man :bowing_woman: bowing_woman :man_facepalming: man_facepalming :woman_facepalming: woman_facepalming :man_shrugging: man_shrugging :woman_shrugging: woman_shrugging Person Role icon code icon code :man_health_worker: man_health_worker :woman_health_worker: woman_health_worker :man_student: man_student :woman_student: woman_student :man_teacher: man_teacher :woman_teacher: woman_teacher :man_judge: man_judge :woman_judge: woman_judge :man_farmer: man_farmer :woman_farmer: woman_farmer :man_cook: man_cook :woman_cook: woman_cook :man_mechanic: man_mechanic :woman_mechanic: woman_mechanic :man_factory_worker: man_factory_worker :woman_factory_worker: woman_factory_worker :man_office_worker: man_office_worker :woman_office_worker: woman_office_worker :man_scientist: man_scientist :woman_scientist: woman_scientist :man_technologist: man_technologist :woman_technologist: woman_technologist :man_singer: man_singer :woman_singer: woman_singer :man_artist: man_artist :woman_artist: woman_artist :man_pilot: man_pilot :woman_pilot: woman_pilot :man_astronaut: man_astronaut :woman_astronaut: woman_astronaut :man_firefighter: man_firefighter :woman_firefighter: woman_firefighter :cop: cop policeman :policewoman: policewoman :detective: detective male_detective :female_detective: female_detective :guardsman: guardsman :guardswoman: guardswoman :construction_worker: construction_worker construction_worker_man :construction_worker_woman: construction_worker_woman :prince: prince :princess: princess :man_with_turban: man_with_turban :woman_with_turban: woman_with_turban :man_with_gua_pi_mao: man_with_gua_pi_mao :man_in_tuxedo: man_in_tuxedo :bride_with_veil: bride_with_veil :pregnant_woman: pregnant_woman Person Fantasy icon code icon code :angel: angel :santa: santa :mrs_claus: mrs_claus Person Activity icon code icon code :massage: massage massage_woman :massage_man: massage_man :haircut: haircut haircut_woman :haircut_man: haircut_man :walking: walking walking_man :walking_woman: walking_woman :runner: runner running running_man :running_woman: running_woman :dancer: dancer :man_dancing: man_dancing :business_suit_levitating: business_suit_levitating :dancers: dancers dancing_women :dancing_men: dancing_men Person Sport icon code icon code :person_fencing: person_fencing :horse_racing: horse_racing :skier: skier :snowboarder: snowboarder :golfing_man: golfing_man :golfing_woman: golfing_woman :surfer: surfer surfing_man :surfing_woman: surfing_woman :rowboat: rowboat rowing_man :rowing_woman: rowing_woman :swimmer: swimmer swimming_man :swimming_woman: swimming_woman :basketball_man: basketball_man :basketball_woman: basketball_woman :weight_lifting_man: weight_lifting_man :weight_lifting_woman: weight_lifting_woman :bicyclist: bicyclist biking_man :biking_woman: biking_woman :mountain_bicyclist: mountain_bicyclist mountain_biking_man :mountain_biking_woman: mountain_biking_woman :man_cartwheeling: man_cartwheeling :woman_cartwheeling: woman_cartwheeling :men_wrestling: men_wrestling :women_wrestling: women_wrestling :man_playing_water_polo: man_playing_water_polo :woman_playing_water_polo: woman_playing_water_polo :man_playing_handball: man_playing_handball :woman_playing_handball: woman_playing_handball :man_juggling: man_juggling :woman_juggling: woman_juggling Person Resting icon code icon code :bath: bath :sleeping_bed: sleeping_bed Family icon code icon code :two_women_holding_hands: two_women_holding_hands :couple: couple :two_men_holding_hands: two_men_holding_hands :couplekiss_man_woman: couplekiss_man_woman :couplekiss_man_man: couplekiss_man_man :couplekiss_woman_woman: couplekiss_woman_woman :couple_with_heart: couple_with_heart couple_with_heart_woman_man :couple_with_heart_man_man: couple_with_heart_man_man :couple_with_heart_woman_woman: couple_with_heart_woman_woman :family: family family_man_woman_boy :family_man_woman_girl: family_man_woman_girl :family_man_woman_girl_boy: family_man_woman_girl_boy :family_man_woman_boy_boy: family_man_woman_boy_boy :family_man_woman_girl_girl: family_man_woman_girl_girl :family_man_man_boy: family_man_man_boy :family_man_man_girl: family_man_man_girl :family_man_man_girl_boy: family_man_man_girl_boy :family_man_man_boy_boy: family_man_man_boy_boy :family_man_man_girl_girl: family_man_man_girl_girl :family_woman_woman_boy: family_woman_woman_boy :family_woman_woman_girl: family_woman_woman_girl :family_woman_woman_girl_boy: family_woman_woman_girl_boy :family_woman_woman_boy_boy: family_woman_woman_boy_boy :family_woman_woman_girl_girl: family_woman_woman_girl_girl :family_man_boy: family_man_boy :family_man_boy_boy: family_man_boy_boy :family_man_girl: family_man_girl :family_man_girl_boy: family_man_girl_boy :family_man_girl_girl: family_man_girl_girl :family_woman_boy: family_woman_boy :family_woman_boy_boy: family_woman_boy_boy :family_woman_girl: family_woman_girl :family_woman_girl_boy: family_woman_girl_boy :family_woman_girl_girl: family_woman_girl_girl Person Symbol icon code icon code :speaking_head: speaking_head :bust_in_silhouette: bust_in_silhouette :busts_in_silhouette: busts_in_silhouette :footprints: footprints Animals \u0026amp; Nature Animal Mammal icon code icon code :monkey_face: monkey_face :monkey: monkey :gorilla: gorilla :dog: dog :dog2: dog2 :poodle: poodle :wolf: wolf :fox_face: fox_face :cat: cat :cat2: cat2 :lion: lion :tiger: tiger :tiger2: tiger2 :leopard: leopard :horse: horse :racehorse: racehorse :unicorn: unicorn :deer: deer :cow: cow :ox: ox :water_buffalo: water_buffalo :cow2: cow2 :pig: pig :pig2: pig2 :boar: boar :pig_nose: pig_nose :ram: ram :sheep: sheep :goat: goat :dromedary_camel: dromedary_camel :camel: camel :elephant: elephant :rhinoceros: rhinoceros :mouse: mouse :mouse2: mouse2 :rat: rat :hamster: hamster :rabbit: rabbit :rabbit2: rabbit2 :chipmunk: chipmunk :bat: bat :bear: bear :koala: koala :panda_face: panda_face :feet: feet paw_prints Animal Bird icon code icon code :turkey: turkey :chicken: chicken :rooster: rooster :hatching_chick: hatching_chick :baby_chick: baby_chick :hatched_chick: hatched_chick :bird: bird :penguin: penguin :dove: dove :eagle: eagle :duck: duck :owl: owl Animal Amphibian icon code icon code :frog: frog Animal Reptile icon code icon code :crocodile: crocodile :turtle: turtle :lizard: lizard :snake: snake :dragon_face: dragon_face :dragon: dragon Animal Marine icon code icon code :whale: whale :whale2: whale2 :dolphin: dolphin flipper :fish: fish :tropical_fish: tropical_fish :blowfish: blowfish :shark: shark :octopus: octopus :shell: shell Animal Bug icon code icon code :snail: snail :butterfly: butterfly :bug: bug :ant: ant :bee: bee honeybee :beetle: beetle :spider: spider :spider_web: spider_web :scorpion: scorpion Plant Flower icon code icon code :bouquet: bouquet :cherry_blossom: cherry_blossom :white_flower: white_flower :rosette: rosette :rose: rose :wilted_flower: wilted_flower :hibiscus: hibiscus :sunflower: sunflower :blossom: blossom :tulip: tulip Plant Other icon code icon code :seedling: seedling :evergreen_tree: evergreen_tree :deciduous_tree: deciduous_tree :palm_tree: palm_tree :cactus: cactus :ear_of_rice: ear_of_rice :herb: herb :shamrock: shamrock :four_leaf_clover: four_leaf_clover :maple_leaf: maple_leaf :fallen_leaf: fallen_leaf :leaves: leaves Food \u0026amp; Drink Food Fruit icon code icon code :grapes: grapes :melon: melon :watermelon: watermelon :mandarin: mandarin orange tangerine :lemon: lemon :banana: banana :pineapple: pineapple :apple: apple :green_apple: green_apple :pear: pear :peach: peach :cherries: cherries :strawberry: strawberry :kiwi_fruit: kiwi_fruit :tomato: tomato Food Vegetable icon code icon code :avocado: avocado :eggplant: eggplant :potato: potato :carrot: carrot :corn: corn :hot_pepper: hot_pepper :cucumber: cucumber :mushroom: mushroom :peanuts: peanuts :chestnut: chestnut Food Prepared icon code icon code :bread: bread :croissant: croissant :baguette_bread: baguette_bread :pancakes: pancakes :cheese: cheese :meat_on_bone: meat_on_bone :poultry_leg: poultry_leg :bacon: bacon :hamburger: hamburger :fries: fries :pizza: pizza :hotdog: hotdog :taco: taco :burrito: burrito :stuffed_flatbread: stuffed_flatbread :egg: egg :fried_egg: fried_egg :shallow_pan_of_food: shallow_pan_of_food :stew: stew :green_salad: green_salad :popcorn: popcorn Food Asian icon code icon code :bento: bento :rice_cracker: rice_cracker :rice_ball: rice_ball :rice: rice :curry: curry :ramen: ramen :spaghetti: spaghetti :sweet_potato: sweet_potato :oden: oden :sushi: sushi :fried_shrimp: fried_shrimp :fish_cake: fish_cake :dango: dango Food Marine icon code icon code :crab: crab :shrimp: shrimp :squid: squid Food Sweet icon code icon code :icecream: icecream :shaved_ice: shaved_ice :ice_cream: ice_cream :doughnut: doughnut :cookie: cookie :birthday: birthday :cake: cake :chocolate_bar: chocolate_bar :candy: candy :lollipop: lollipop :custard: custard :honey_pot: honey_pot Drink icon code icon code :baby_bottle: baby_bottle :milk_glass: milk_glass :coffee: coffee :tea: tea :sake: sake :champagne: champagne :wine_glass: wine_glass :cocktail: cocktail :tropical_drink: tropical_drink :beer: beer :beers: beers :clinking_glasses: clinking_glasses :tumbler_glass: tumbler_glass Dishware icon code icon code :plate_with_cutlery: plate_with_cutlery :fork_and_knife: fork_and_knife :spoon: spoon :hocho: hocho knife :amphora: amphora Travel \u0026amp; Places Place Map icon code icon code :earth_africa: earth_africa :earth_americas: earth_americas :earth_asia: earth_asia :globe_with_meridians: globe_with_meridians :world_map: world_map :japan: japan Place Geographic icon code icon code :mountain_snow: mountain_snow :mountain: mountain :volcano: volcano :mount_fuji: mount_fuji :camping: camping :beach_umbrella: beach_umbrella :desert: desert :desert_island: desert_island :national_park: national_park Place Building icon code icon code :stadium: stadium :classical_building: classical_building :building_construction: building_construction :houses: houses :derelict_house: derelict_house :house: house :house_with_garden: house_with_garden :office: office :post_office: post_office :european_post_office: european_post_office :hospital: hospital :bank: bank :hotel: hotel :love_hotel: love_hotel :convenience_store: convenience_store :school: school :department_store: department_store :factory: factory :japanese_castle: japanese_castle :european_castle: european_castle :wedding: wedding :tokyo_tower: tokyo_tower :statue_of_liberty: statue_of_liberty Place Religious icon code icon code :church: church :mosque: mosque :synagogue: synagogue :shinto_shrine: shinto_shrine :kaaba: kaaba Place Other icon code icon code :fountain: fountain :tent: tent :foggy: foggy :night_with_stars: night_with_stars :cityscape: cityscape :sunrise_over_mountains: sunrise_over_mountains :sunrise: sunrise :city_sunset: city_sunset :city_sunrise: city_sunrise :bridge_at_night: bridge_at_night :hotsprings: hotsprings :carousel_horse: carousel_horse :ferris_wheel: ferris_wheel :roller_coaster: roller_coaster :barber: barber :circus_tent: circus_tent Transport Ground icon code icon code :steam_locomotive: steam_locomotive :railway_car: railway_car :bullettrain_side: bullettrain_side :bullettrain_front: bullettrain_front :train2: train2 :metro: metro :light_rail: light_rail :station: station :tram: tram :monorail: monorail :mountain_railway: mountain_railway :train: train :bus: bus :oncoming_bus: oncoming_bus :trolleybus: trolleybus :minibus: minibus :ambulance: ambulance :fire_engine: fire_engine :police_car: police_car :oncoming_police_car: oncoming_police_car :taxi: taxi :oncoming_taxi: oncoming_taxi :car: car red_car :oncoming_automobile: oncoming_automobile :blue_car: blue_car :truck: truck :articulated_lorry: articulated_lorry :tractor: tractor :racing_car: racing_car :motorcycle: motorcycle :motor_scooter: motor_scooter :bike: bike :kick_scooter: kick_scooter :busstop: busstop :motorway: motorway :railway_track: railway_track :oil_drum: oil_drum :fuelpump: fuelpump :rotating_light: rotating_light :traffic_light: traffic_light :vertical_traffic_light: vertical_traffic_light :stop_sign: stop_sign :construction: construction Transport Water icon code icon code :anchor: anchor :boat: boat sailboat :canoe: canoe :speedboat: speedboat :passenger_ship: passenger_ship :ferry: ferry :motor_boat: motor_boat :ship: ship Transport Air icon code icon code :airplane: airplane :small_airplane: small_airplane :flight_departure: flight_departure :flight_arrival: flight_arrival :seat: seat :helicopter: helicopter :suspension_railway: suspension_railway :mountain_cableway: mountain_cableway :aerial_tramway: aerial_tramway :artificial_satellite: artificial_satellite :rocket: rocket Hotel icon code icon code :bellhop_bell: bellhop_bell Time icon code icon code :hourglass: hourglass :hourglass_flowing_sand: hourglass_flowing_sand :watch: watch :alarm_clock: alarm_clock :stopwatch: stopwatch :timer_clock: timer_clock :mantelpiece_clock: mantelpiece_clock :clock12: clock12 :clock1230: clock1230 :clock1: clock1 :clock130: clock130 :clock2: clock2 :clock230: clock230 :clock3: clock3 :clock330: clock330 :clock4: clock4 :clock430: clock430 :clock5: clock5 :clock530: clock530 :clock6: clock6 :clock630: clock630 :clock7: clock7 :clock730: clock730 :clock8: clock8 :clock830: clock830 :clock9: clock9 :clock930: clock930 :clock10: clock10 :clock1030: clock1030 :clock11: clock11 :clock1130: clock1130 Sky \u0026amp; Weather icon code icon code :new_moon: new_moon :waxing_crescent_moon: waxing_crescent_moon :first_quarter_moon: first_quarter_moon :moon: moon waxing_gibbous_moon :full_moon: full_moon :waning_gibbous_moon: waning_gibbous_moon :last_quarter_moon: last_quarter_moon :waning_crescent_moon: waning_crescent_moon :crescent_moon: crescent_moon :new_moon_with_face: new_moon_with_face :first_quarter_moon_with_face: first_quarter_moon_with_face :last_quarter_moon_with_face: last_quarter_moon_with_face :thermometer: thermometer :sunny: sunny :full_moon_with_face: full_moon_with_face :sun_with_face: sun_with_face :star: star :star2: star2 :stars: stars :milky_way: milky_way :cloud: cloud :partly_sunny: partly_sunny :cloud_with_lightning_and_rain: cloud_with_lightning_and_rain :sun_behind_small_cloud: sun_behind_small_cloud :sun_behind_large_cloud: sun_behind_large_cloud :sun_behind_rain_cloud: sun_behind_rain_cloud :cloud_with_rain: cloud_with_rain :cloud_with_snow: cloud_with_snow :cloud_with_lightning: cloud_with_lightning :tornado: tornado :fog: fog :wind_face: wind_face :cyclone: cyclone :rainbow: rainbow :closed_umbrella: closed_umbrella :open_umbrella: open_umbrella :umbrella: umbrella :parasol_on_ground: parasol_on_ground :zap: zap :snowflake: snowflake :snowman_with_snow: snowman_with_snow :snowman: snowman :comet: comet :fire: fire :droplet: droplet :ocean: ocean Activities Event icon code icon code :jack_o_lantern: jack_o_lantern :christmas_tree: christmas_tree :fireworks: fireworks :sparkler: sparkler :sparkles: sparkles :balloon: balloon :tada: tada :confetti_ball: confetti_ball :tanabata_tree: tanabata_tree :bamboo: bamboo :dolls: dolls :flags: flags :wind_chime: wind_chime :rice_scene: rice_scene :ribbon: ribbon :gift: gift :reminder_ribbon: reminder_ribbon :tickets: tickets :ticket: ticket Award Medal icon code icon code :medal_military: medal_military :trophy: trophy :medal_sports: medal_sports :1st_place_medal: 1st_place_medal :2nd_place_medal: 2nd_place_medal :3rd_place_medal: 3rd_place_medal Sport icon code icon code :soccer: soccer :baseball: baseball :basketball: basketball :volleyball: volleyball :football: football :rugby_football: rugby_football :tennis: tennis :bowling: bowling :cricket: cricket :field_hockey: field_hockey :ice_hockey: ice_hockey :ping_pong: ping_pong :badminton: badminton :boxing_glove: boxing_glove :martial_arts_uniform: martial_arts_uniform :goal_net: goal_net :golf: golf :ice_skate: ice_skate :fishing_pole_and_fish: fishing_pole_and_fish :running_shirt_with_sash: running_shirt_with_sash :ski: ski Game icon code icon code :dart: dart :8ball: 8ball :crystal_ball: crystal_ball :video_game: video_game :joystick: joystick :slot_machine: slot_machine :game_die: game_die :spades: spades :hearts: hearts :diamonds: diamonds :clubs: clubs :black_joker: black_joker :mahjong: mahjong :flower_playing_cards: flower_playing_cards Arts \u0026amp; Crafts icon code icon code :performing_arts: performing_arts :framed_picture: framed_picture :art: art Objects Clothing icon code icon code :eyeglasses: eyeglasses :dark_sunglasses: dark_sunglasses :necktie: necktie :shirt: shirt tshirt :jeans: jeans :dress: dress :kimono: kimono :bikini: bikini :womans_clothes: womans_clothes :purse: purse :handbag: handbag :pouch: pouch :shopping: shopping :school_satchel: school_satchel :mans_shoe: mans_shoe shoe :athletic_shoe: athletic_shoe :high_heel: high_heel :sandal: sandal :boot: boot :crown: crown :womans_hat: womans_hat :tophat: tophat :mortar_board: mortar_board :rescue_worker_helmet: rescue_worker_helmet :prayer_beads: prayer_beads :lipstick: lipstick :ring: ring :gem: gem Sound icon code icon code :mute: mute :speaker: speaker :sound: sound :loud_sound: loud_sound :loudspeaker: loudspeaker :mega: mega :postal_horn: postal_horn :bell: bell :no_bell: no_bell Music icon code icon code :musical_score: musical_score :musical_note: musical_note :notes: notes :studio_microphone: studio_microphone :level_slider: level_slider :control_knobs: control_knobs :microphone: microphone :headphones: headphones :radio: radio Musical Instrument icon code icon code :saxophone: saxophone :guitar: guitar :musical_keyboard: musical_keyboard :trumpet: trumpet :violin: violin :drum: drum Phone icon code icon code :iphone: iphone :calling: calling :phone: phone telephone :telephone_receiver: telephone_receiver :pager: pager :fax: fax Computer icon code icon code :battery: battery :electric_plug: electric_plug :computer: computer :desktop_computer: desktop_computer :printer: printer :keyboard: keyboard :computer_mouse: computer_mouse :trackball: trackball :minidisc: minidisc :floppy_disk: floppy_disk :cd: cd :dvd: dvd Light \u0026amp; Video icon code icon code :movie_camera: movie_camera :film_strip: film_strip :film_projector: film_projector :clapper: clapper :tv: tv :camera: camera :camera_flash: camera_flash :video_camera: video_camera :vhs: vhs :mag: mag :mag_right: mag_right :candle: candle :bulb: bulb :flashlight: flashlight :izakaya_lantern: izakaya_lantern lantern Book Paper icon code icon code :notebook_with_decorative_cover: notebook_with_decorative_cover :closed_book: closed_book :book: book open_book :green_book: green_book :blue_book: blue_book :orange_book: orange_book :books: books :notebook: notebook :ledger: ledger :page_with_curl: page_with_curl :scroll: scroll :page_facing_up: page_facing_up :newspaper: newspaper :newspaper_roll: newspaper_roll :bookmark_tabs: bookmark_tabs :bookmark: bookmark :label: label Money icon code icon code :moneybag: moneybag :yen: yen :dollar: dollar :euro: euro :pound: pound :money_with_wings: money_with_wings :credit_card: credit_card :chart: chart Mail icon code icon code :email: email envelope :e-mail: :e-mail: :incoming_envelope: incoming_envelope :envelope_with_arrow: envelope_with_arrow :outbox_tray: outbox_tray :inbox_tray: inbox_tray :package: package :mailbox: mailbox :mailbox_closed: mailbox_closed :mailbox_with_mail: mailbox_with_mail :mailbox_with_no_mail: mailbox_with_no_mail :postbox: postbox :ballot_box: ballot_box Writing icon code icon code :pencil2: pencil2 :black_nib: black_nib :fountain_pen: fountain_pen :pen: pen :paintbrush: paintbrush :crayon: crayon :memo: memo pencil Office icon code icon code :briefcase: briefcase :file_folder: file_folder :open_file_folder: open_file_folder :card_index_dividers: card_index_dividers :date: date :calendar: calendar :spiral_notepad: spiral_notepad :spiral_calendar: spiral_calendar :card_index: card_index :chart_with_upwards_trend: chart_with_upwards_trend :chart_with_downwards_trend: chart_with_downwards_trend :bar_chart: bar_chart :clipboard: clipboard :pushpin: pushpin :round_pushpin: round_pushpin :paperclip: paperclip :paperclips: paperclips :straight_ruler: straight_ruler :triangular_ruler: triangular_ruler :scissors: scissors :card_file_box: card_file_box :file_cabinet: file_cabinet :wastebasket: wastebasket Lock icon code icon code :lock: lock :unlock: unlock :lock_with_ink_pen: lock_with_ink_pen :closed_lock_with_key: closed_lock_with_key :key: key :old_key: old_key Tool icon code icon code :hammer: hammer :pick: pick :hammer_and_pick: hammer_and_pick :hammer_and_wrench: hammer_and_wrench :dagger: dagger :crossed_swords: crossed_swords :gun: gun :bow_and_arrow: bow_and_arrow :shield: shield :wrench: wrench :nut_and_bolt: nut_and_bolt :gear: gear :clamp: clamp :balance_scale: balance_scale :link: link :chains: chains Science icon code icon code :alembic: alembic :microscope: microscope :telescope: telescope :satellite: satellite Medical icon code icon code :syringe: syringe :pill: pill Household icon code icon code :door: door :bed: bed :couch_and_lamp: couch_and_lamp :toilet: toilet :shower: shower :bathtub: bathtub :shopping_cart: shopping_cart Other Object icon code icon code :smoking: smoking :coffin: coffin :funeral_urn: funeral_urn :moyai: moyai Symbols Transport Sign icon code icon code :atm: atm :put_litter_in_its_place: put_litter_in_its_place :potable_water: potable_water :wheelchair: wheelchair :mens: mens :womens: womens :restroom: restroom :baby_symbol: baby_symbol :wc: wc :passport_control: passport_control :customs: customs :baggage_claim: baggage_claim :left_luggage: left_luggage Warning icon code icon code :warning: warning :children_crossing: children_crossing :no_entry: no_entry :no_entry_sign: no_entry_sign :no_bicycles: no_bicycles :no_smoking: no_smoking :do_not_litter: do_not_litter :non-potable_water: :non-potable_water: :no_pedestrians: no_pedestrians :no_mobile_phones: no_mobile_phones :underage: underage :radioactive: radioactive :biohazard: biohazard Arrow icon code icon code :arrow_up: arrow_up :arrow_upper_right: arrow_upper_right :arrow_right: arrow_right :arrow_lower_right: arrow_lower_right :arrow_down: arrow_down :arrow_lower_left: arrow_lower_left :arrow_left: arrow_left :arrow_upper_left: arrow_upper_left :arrow_up_down: arrow_up_down :left_right_arrow: left_right_arrow :leftwards_arrow_with_hook: leftwards_arrow_with_hook :arrow_right_hook: arrow_right_hook :arrow_heading_up: arrow_heading_up :arrow_heading_down: arrow_heading_down :arrows_clockwise: arrows_clockwise :arrows_counterclockwise: arrows_counterclockwise :back: back :end: end :on: on :soon: soon :top: top Religion icon code icon code :place_of_worship: place_of_worship :atom_symbol: atom_symbol :om: om :star_of_david: star_of_david :wheel_of_dharma: wheel_of_dharma :yin_yang: yin_yang :latin_cross: latin_cross :orthodox_cross: orthodox_cross :star_and_crescent: star_and_crescent :peace_symbol: peace_symbol :menorah: menorah :six_pointed_star: six_pointed_star Zodiac icon code icon code :aries: aries :taurus: taurus :gemini: gemini :cancer: cancer :leo: leo :virgo: virgo :libra: libra :scorpius: scorpius :sagittarius: sagittarius :capricorn: capricorn :aquarius: aquarius :pisces: pisces :ophiuchus: ophiuchus Av Symbol icon code icon code :twisted_rightwards_arrows: twisted_rightwards_arrows :repeat: repeat :repeat_one: repeat_one :arrow_forward: arrow_forward :fast_forward: fast_forward :next_track_button: next_track_button :play_or_pause_button: play_or_pause_button :arrow_backward: arrow_backward :rewind: rewind :previous_track_button: previous_track_button :arrow_up_small: arrow_up_small :arrow_double_up: arrow_double_up :arrow_down_small: arrow_down_small :arrow_double_down: arrow_double_down :pause_button: pause_button :stop_button: stop_button :record_button: record_button :cinema: cinema :low_brightness: low_brightness :high_brightness: high_brightness :signal_strength: signal_strength :vibration_mode: vibration_mode :mobile_phone_off: mobile_phone_off Math icon code icon code :heavy_multiplication_x: heavy_multiplication_x :heavy_plus_sign: heavy_plus_sign :heavy_minus_sign: heavy_minus_sign :heavy_division_sign: heavy_division_sign Punctuation icon code icon code :bangbang: bangbang :interrobang: interrobang :question: question :grey_question: grey_question :grey_exclamation: grey_exclamation :exclamation: exclamation heavy_exclamation_mark :wavy_dash: wavy_dash Currency icon code icon code :currency_exchange: currency_exchange :heavy_dollar_sign: heavy_dollar_sign Keycap icon code icon code :hash: hash :asterisk: asterisk :zero: zero :one: one :two: two :three: three :four: four :five: five :six: six :seven: seven :eight: eight :nine: nine :keycap_ten: keycap_ten Alphabet icon code icon code :capital_abcd: capital_abcd :abcd: abcd :1234: 1234 :symbols: symbols :abc: abc :a: a :ab: ab :b: b :cl: cl :cool: cool :free: free :information_source: information_source :id: id :m: m :new: new :ng: ng :o2: o2 :ok: ok :parking: parking :sos: sos :up: up :vs: vs :koko: koko :sa: sa :u6708: u6708 :u6709: u6709 :u6307: u6307 :ideograph_advantage: ideograph_advantage :u5272: u5272 :u7121: u7121 :u7981: u7981 :accept: accept :u7533: u7533 :u5408: u5408 :u7a7a: u7a7a :congratulations: congratulations :secret: secret :u55b6: u55b6 :u6e80: u6e80 Geometric icon code icon code :red_circle: red_circle :large_blue_circle: large_blue_circle :black_circle: black_circle :white_circle: white_circle :black_large_square: black_large_square :white_large_square: white_large_square :black_medium_square: black_medium_square :white_medium_square: white_medium_square :black_medium_small_square: black_medium_small_square :white_medium_small_square: white_medium_small_square :black_small_square: black_small_square :white_small_square: white_small_square :large_orange_diamond: large_orange_diamond :large_blue_diamond: large_blue_diamond :small_orange_diamond: small_orange_diamond :small_blue_diamond: small_blue_diamond :small_red_triangle: small_red_triangle :small_red_triangle_down: small_red_triangle_down :diamond_shape_with_a_dot_inside: diamond_shape_with_a_dot_inside :radio_button: radio_button :white_square_button: white_square_button :black_square_button: black_square_button Other Symbol icon code icon code :recycle: recycle :fleur_de_lis: fleur_de_lis :trident: trident :name_badge: name_badge :beginner: beginner :o: o :white_check_mark: white_check_mark :ballot_box_with_check: ballot_box_with_check :heavy_check_mark: heavy_check_mark :x: x :negative_squared_cross_mark: negative_squared_cross_mark :curly_loop: curly_loop :loop: loop :part_alternation_mark: part_alternation_mark :eight_spoked_asterisk: eight_spoked_asterisk :eight_pointed_black_star: eight_pointed_black_star :sparkle: sparkle :copyright: copyright :registered: registered :tm: tm Flags Common Flags icon code icon code :checkered_flag: checkered_flag :triangular_flag_on_post: triangular_flag_on_post :crossed_flags: crossed_flags :black_flag: black_flag :white_flag: white_flag :rainbow_flag: rainbow_flag Country and Region Flags icon code icon code :andorra: andorra :united_arab_emirates: united_arab_emirates :afghanistan: afghanistan :antigua_barbuda: antigua_barbuda :anguilla: anguilla :albania: albania :armenia: armenia :angola: angola :antarctica: antarctica :argentina: argentina :american_samoa: american_samoa :austria: austria :australia: australia :aruba: aruba :aland_islands: aland_islands :azerbaijan: azerbaijan :bosnia_herzegovina: bosnia_herzegovina :barbados: barbados :bangladesh: bangladesh :belgium: belgium :burkina_faso: burkina_faso :bulgaria: bulgaria :bahrain: bahrain :burundi: burundi :benin: benin :st_barthelemy: st_barthelemy :bermuda: bermuda :brunei: brunei :bolivia: bolivia :caribbean_netherlands: caribbean_netherlands :brazil: brazil :bahamas: bahamas :bhutan: bhutan :botswana: botswana :belarus: belarus :belize: belize :canada: canada :cocos_islands: cocos_islands :congo_kinshasa: congo_kinshasa :central_african_republic: central_african_republic :congo_brazzaville: congo_brazzaville :switzerland: switzerland :cote_divoire: cote_divoire :cook_islands: cook_islands :chile: chile :cameroon: cameroon :cn: cn :colombia: colombia :costa_rica: costa_rica :cuba: cuba :cape_verde: cape_verde :curacao: curacao :christmas_island: christmas_island :cyprus: cyprus :czech_republic: czech_republic :de: de :djibouti: djibouti :denmark: denmark :dominica: dominica :dominican_republic: dominican_republic :algeria: algeria :ecuador: ecuador :estonia: estonia :egypt: egypt :western_sahara: western_sahara :eritrea: eritrea :es: es :ethiopia: ethiopia :eu: eu european_union :finland: finland :fiji: fiji :falkland_islands: falkland_islands :micronesia: micronesia :faroe_islands: faroe_islands :fr: fr :gabon: gabon :gb: gb uk :grenada: grenada :georgia: georgia :french_guiana: french_guiana :guernsey: guernsey :ghana: ghana :gibraltar: gibraltar :greenland: greenland :gambia: gambia :guinea: guinea :guadeloupe: guadeloupe :equatorial_guinea: equatorial_guinea :greece: greece :south_georgia_south_sandwich_islands: south_georgia_south_sandwich_islands :guatemala: guatemala :guam: guam :guinea_bissau: guinea_bissau :guyana: guyana :hong_kong: hong_kong :honduras: honduras :croatia: croatia :haiti: haiti :hungary: hungary :canary_islands: canary_islands :indonesia: indonesia :ireland: ireland :israel: israel :isle_of_man: isle_of_man :india: india :british_indian_ocean_territory: british_indian_ocean_territory :iraq: iraq :iran: iran :iceland: iceland :it: it :jersey: jersey :jamaica: jamaica :jordan: jordan :jp: jp :kenya: kenya :kyrgyzstan: kyrgyzstan :cambodia: cambodia :kiribati: kiribati :comoros: comoros :st_kitts_nevis: st_kitts_nevis :north_korea: north_korea :kr: kr :kuwait: kuwait :cayman_islands: cayman_islands :kazakhstan: kazakhstan :laos: laos :lebanon: lebanon :st_lucia: st_lucia :liechtenstein: liechtenstein :sri_lanka: sri_lanka :liberia: liberia :lesotho: lesotho :lithuania: lithuania :luxembourg: luxembourg :latvia: latvia :libya: libya :morocco: morocco :monaco: monaco :moldova: moldova :montenegro: montenegro :madagascar: madagascar :marshall_islands: marshall_islands :macedonia: macedonia :mali: mali :myanmar: myanmar :mongolia: mongolia :macau: macau :northern_mariana_islands: northern_mariana_islands :martinique: martinique :mauritania: mauritania :montserrat: montserrat :malta: malta :mauritius: mauritius :maldives: maldives :malawi: malawi :mexico: mexico :malaysia: malaysia :mozambique: mozambique :namibia: namibia :new_caledonia: new_caledonia :niger: niger :norfolk_island: norfolk_island :nigeria: nigeria :nicaragua: nicaragua :netherlands: netherlands :norway: norway :nepal: nepal :nauru: nauru :niue: niue :new_zealand: new_zealand :oman: oman :panama: panama :peru: peru :french_polynesia: french_polynesia :papua_new_guinea: papua_new_guinea :philippines: philippines :pakistan: pakistan :poland: poland :st_pierre_miquelon: st_pierre_miquelon :pitcairn_islands: pitcairn_islands :puerto_rico: puerto_rico :palestinian_territories: palestinian_territories :portugal: portugal :palau: palau :paraguay: paraguay :qatar: qatar :reunion: reunion :romania: romania :serbia: serbia :ru: ru :rwanda: rwanda :saudi_arabia: saudi_arabia :solomon_islands: solomon_islands :seychelles: seychelles :sudan: sudan :sweden: sweden :singapore: singapore :st_helena: st_helena :slovenia: slovenia :slovakia: slovakia :sierra_leone: sierra_leone :san_marino: san_marino :senegal: senegal :somalia: somalia :suriname: suriname :south_sudan: south_sudan :sao_tome_principe: sao_tome_principe :el_salvador: el_salvador :sint_maarten: sint_maarten :syria: syria :swaziland: swaziland :turks_caicos_islands: turks_caicos_islands :chad: chad :french_southern_territories: french_southern_territories :togo: togo :thailand: thailand :tajikistan: tajikistan :tokelau: tokelau :timor_leste: timor_leste :turkmenistan: turkmenistan :tunisia: tunisia :tonga: tonga :tr: tr :trinidad_tobago: trinidad_tobago :tuvalu: tuvalu :taiwan: taiwan :tanzania: tanzania :ukraine: ukraine :uganda: uganda :us: us :uruguay: uruguay :uzbekistan: uzbekistan :vatican_city: vatican_city :st_vincent_grenadines: st_vincent_grenadines :venezuela: venezuela :british_virgin_islands: british_virgin_islands :us_virgin_islands: us_virgin_islands :vietnam: vietnam :vanuatu: vanuatu :wallis_futuna: wallis_futuna :samoa: samoa :kosovo: kosovo :yemen: yemen :mayotte: mayotte :south_africa: south_africa :zambia: zambia :zimbabwe: zimbabwe ","date":"2019-10-01T17:55:28+08:00","permalink":"http://localhost:1313/posts/emoji-support/","title":"Emoji Support"},{"content":"The echarts shortcode supports data visualization in Hugo with ECharts library.\nECharts is a library helping you to generate interactive data visualization.\nThe basic chart types ECharts supports include line series, bar series, scatter series, pie charts, candle-stick series, boxplot series for statistics, map series, heatmap series, lines series for directional information, graph series for relationships, treemap series, sunburst series, parallel series for multi-dimensional data, funnel series, gauge series. And it\u0026rsquo;s extremely easy to create a combinition of them with ECharts.\nJust insert your ECharts option in JSON/YAML/TOML format in the echarts shortcode and that’s it.\nExample echarts input in JSON format:\n{{\u0026lt; echarts \u0026gt;}} { \u0026#34;title\u0026#34;: { \u0026#34;text\u0026#34;: \u0026#34;Summary Line Chart\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;2%\u0026#34;, \u0026#34;left\u0026#34;: \u0026#34;center\u0026#34; }, \u0026#34;tooltip\u0026#34;: { \u0026#34;trigger\u0026#34;: \u0026#34;axis\u0026#34; }, \u0026#34;legend\u0026#34;: { \u0026#34;data\u0026#34;: [\u0026#34;Email Marketing\u0026#34;, \u0026#34;Affiliate Advertising\u0026#34;, \u0026#34;Video Advertising\u0026#34;, \u0026#34;Direct View\u0026#34;, \u0026#34;Search Engine\u0026#34;], \u0026#34;top\u0026#34;: \u0026#34;10%\u0026#34; }, \u0026#34;grid\u0026#34;: { \u0026#34;left\u0026#34;: \u0026#34;5%\u0026#34;, \u0026#34;right\u0026#34;: \u0026#34;5%\u0026#34;, \u0026#34;bottom\u0026#34;: \u0026#34;5%\u0026#34;, \u0026#34;top\u0026#34;: \u0026#34;20%\u0026#34;, \u0026#34;containLabel\u0026#34;: true }, \u0026#34;toolbox\u0026#34;: { \u0026#34;feature\u0026#34;: { \u0026#34;saveAsImage\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Save as Image\u0026#34; } } }, \u0026#34;xAxis\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;category\u0026#34;, \u0026#34;boundaryGap\u0026#34;: false, \u0026#34;data\u0026#34;: [\u0026#34;Monday\u0026#34;, \u0026#34;Tuesday\u0026#34;, \u0026#34;Wednesday\u0026#34;, \u0026#34;Thursday\u0026#34;, \u0026#34;Friday\u0026#34;, \u0026#34;Saturday\u0026#34;, \u0026#34;Sunday\u0026#34;] }, \u0026#34;yAxis\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;value\u0026#34; }, \u0026#34;series\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Email Marketing\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [120, 132, 101, 134, 90, 230, 210] }, { \u0026#34;name\u0026#34;: \u0026#34;Affiliate Advertising\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [220, 182, 191, 234, 290, 330, 310] }, { \u0026#34;name\u0026#34;: \u0026#34;Video Advertising\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [150, 232, 201, 154, 190, 330, 410] }, { \u0026#34;name\u0026#34;: \u0026#34;Direct View\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [320, 332, 301, 334, 390, 330, 320] }, { \u0026#34;name\u0026#34;: \u0026#34;Search Engine\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;stack\u0026#34;: \u0026#34;Total\u0026#34;, \u0026#34;data\u0026#34;: [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u0026lt; /echarts \u0026gt;}}The same in YAML format:\n{{\u0026lt; echarts \u0026gt;}} title: text: Summary Line Chart top: 2% left: center tooltip: trigger: axis legend: data: - Email Marketing - Affiliate Advertising - Video Advertising - Direct View - Search Engine top: 10% grid: left: 5% right: 5% bottom: 5% top: 20% containLabel: true toolbox: feature: saveAsImage: title: Save as Image xAxis: type: category boundaryGap: false data: - Monday - Tuesday - Wednesday - Thursday - Friday - Saturday - Sunday yAxis: type: value series: - name: Email Marketing type: line stack: Total data: - 120 - 132 - 101 - 134 - 90 - 230 - 210 - name: Affiliate Advertising type: line stack: Total data: - 220 - 182 - 191 - 234 - 290 - 330 - 310 - name: Video Advertising type: line stack: Total data: - 150 - 232 - 201 - 154 - 190 - 330 - 410 - name: Direct View type: line stack: Total data: - 320 - 332 - 301 - 334 - 390 - 330 - 320 - name: Search Engine type: line stack: Total data: - 820 - 932 - 901 - 934 - 1290 - 1330 - 1320 {{\u0026lt; /echarts \u0026gt;}}The same in TOML format:\n{{\u0026lt; echarts \u0026gt;}} [title] text = \u0026#34;Summary Line Chart\u0026#34; top = \u0026#34;2%\u0026#34; left = \u0026#34;center\u0026#34; [tooltip] trigger = \u0026#34;axis\u0026#34; [legend] data = [ \u0026#34;Email Marketing\u0026#34;, \u0026#34;Affiliate Advertising\u0026#34;, \u0026#34;Video Advertising\u0026#34;, \u0026#34;Direct View\u0026#34;, \u0026#34;Search Engine\u0026#34; ] top = \u0026#34;10%\u0026#34; [grid] left = \u0026#34;5%\u0026#34; right = \u0026#34;5%\u0026#34; bottom = \u0026#34;5%\u0026#34; top = \u0026#34;20%\u0026#34; containLabel = true [toolbox] [toolbox.feature] [toolbox.feature.saveAsImage] title = \u0026#34;Save as Image\u0026#34; [xAxis] type = \u0026#34;category\u0026#34; boundaryGap = false data = [ \u0026#34;Monday\u0026#34;, \u0026#34;Tuesday\u0026#34;, \u0026#34;Wednesday\u0026#34;, \u0026#34;Thursday\u0026#34;, \u0026#34;Friday\u0026#34;, \u0026#34;Saturday\u0026#34;, \u0026#34;Sunday\u0026#34; ] [yAxis] type = \u0026#34;value\u0026#34; [[series]] name = \u0026#34;Email Marketing\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 120.0, 132.0, 101.0, 134.0, 90.0, 230.0, 210.0 ] [[series]] name = \u0026#34;Affiliate Advertising\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 220.0, 182.0, 191.0, 234.0, 290.0, 330.0, 310.0 ] [[series]] name = \u0026#34;Video Advertising\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 150.0, 232.0, 201.0, 154.0, 190.0, 330.0, 410.0 ] [[series]] name = \u0026#34;Direct View\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 320.0, 332.0, 301.0, 334.0, 390.0, 330.0, 320.0 ] [[series]] name = \u0026#34;Search Engine\u0026#34; type = \u0026#34;line\u0026#34; stack = \u0026#34;Total\u0026#34; data = [ 820.0, 932.0, 901.0, 934.0, 1290.0, 1330.0, 1320.0 ] {{\u0026lt; /echarts \u0026gt;}}The rendered output looks like this:\nThe echarts shortcode has also the following named parameters:\nwidth [optional] (first positional parameter)\nWidth of the data visualization, default value is 100%.\nheight [optional] (second positional parameter)\nHeight of the data visualization, default value is 30rem.\n","date":"2020-03-03T14:29:41+08:00","permalink":"http://localhost:1313/posts/theme-documentation-echarts-shortcode/","title":"Theme Documentation - echarts Shortcode"},{"content":" The mapbox shortcode supports interactive maps in Hugo with Mapbox GL JS library.\nMapbox GL JS is a JavaScript library that uses WebGL to render interactive maps from vector tiles and Mapbox styles.\nThe mapbox shortcode has the following named parameters to use Mapbox GL JS:\nlng [required] (first positional parameter)\nLongitude of the inital centerpoint of the map, measured in degrees.\nlat [required] (second positional parameter)\nLatitude of the inital centerpoint of the map, measured in degrees.\nzoom [optional] (third positional parameter)\nThe initial zoom level of the map, default value is 10.\nmarked [optional] (fourth positional parameter)\nWhether to add a marker at the inital centerpoint of the map, default value is true.\nlight-style [optional] (fifth positional parameter)\nStyle for the light theme, default value is the value set in the front matter or the site configuration.\ndark-style [optional] (sixth positional parameter)\nStyle for the dark theme, default value is the value set in the front matter or the site configuration.\nnavigation [optional]\nWhether to add NavigationControl, default value is the value set in the front matter or the site configuration.\ngeolocate [optional]\nWhether to add GeolocateControl, default value is the value set in the front matter or the site configuration.\nscale [optional]\nWhether to add ScaleControl, default value is the value set in the front matter or the site configuration.\nfullscreen [optional]\nWhether to add FullscreenControl, default value is the value set in the front matter or the site configuration.\nwidth [optional]\nWidth of the map, default value is 100%.\nheight [optional]\nHeight of the map, default value is 20rem.\nExample simple mapbox input:\n{{\u0026lt; mapbox 121.485 31.233 12 \u0026gt;}} Or {{\u0026lt; mapbox lng=121.485 lat=31.233 zoom=12 \u0026gt;}}The rendered output looks like this:\nExample mapbox input with the custom style:\n{{\u0026lt; mapbox -122.252 37.453 10 false \u0026#34;mapbox://styles/mapbox/navigation-preview-day-v4\u0026#34; \u0026#34;mapbox://styles/mapbox/navigation-preview-night-v4\u0026#34; \u0026gt;}} Or {{\u0026lt; mapbox lng=-122.252 lat=37.453 zoom=10 marked=false light-style=\u0026#34;mapbox://styles/mapbox/navigation-preview-day-v4\u0026#34; dark-style=\u0026#34;mapbox://styles/mapbox/navigation-preview-night-v4\u0026#34; \u0026gt;}}The rendered output looks like this:\n","date":"2020-03-03T13:29:41+08:00","permalink":"http://localhost:1313/posts/theme-documentation-mapbox-shortcode/","title":"Theme Documentation - mapbox Shortcode"},{"content":"The music shortcode embeds a responsive music player based on APlayer and MetingJS.\nThere are three ways to use it the music shortcode.\n1 Custom Music URL The complete usage of local resource references is supported.\nThe music shortcode has the following named parameters by custom music URL:\nserver [required]\nURL of the custom music.\nname [optional]\nName of the custom music.\nartist [optional]\nArtist of the custom music.\ncover [required]\nURL of the custom music cover.\nExample music input by custom music URL:\n{{\u0026lt; music url=\u0026#34;/music/Wavelength.mp3\u0026#34; name=Wavelength artist=oldmanyoung cover=\u0026#34;/images/Wavelength.jpg\u0026#34; \u0026gt;}}The rendered output looks like this:\n2 Music Platform URL Automatic Identification The music shortcode has one named parameter by music platform URL automatic identification:\nauto [required] (first positional parameter)\nURL of the music platform URL for automatic identification, which supports netease, tencent and xiami music platform.\nExample music input by music platform URL automatic identification:\n{{\u0026lt; music auto=\u0026#34;https://music.163.com/#/playlist?id=60198\u0026#34; \u0026gt;}} Or {{\u0026lt; music \u0026#34;https://music.163.com/#/playlist?id=60198\u0026#34; \u0026gt;}}The rendered output looks like this:\n3 Custom Server, Type and ID The music shortcode has the following named parameters by custom music platform:\nserver [required] (first positional parameter)\n[netease, tencent, kugou, xiami, baidu]\nMusic platform.\ntype [required] (second positional parameter)\n[song, playlist, album, search, artist]\nType of the music.\nid [required] (third positional parameter)\nSong ID, or playlist ID, or album ID, or search keyword, or artist ID.\nExample music input by custom music platform:\n{{\u0026lt; music server=\u0026#34;netease\u0026#34; type=\u0026#34;song\u0026#34; id=\u0026#34;1868553\u0026#34; \u0026gt;}} Or {{\u0026lt; music netease song 1868553 \u0026gt;}}The rendered output looks like this:\n4 Other Parameters The music shortcode has other named parameters applying to the above three ways:\ntheme [optional]\nMain color of the music player, default value is #448aff.\nfixed [optional]\nWhether to enable fixed mode, default value is false.\nmini [optional]\nWhether to enable mini mode, default value is false.\nautoplay [optional]\nWhether to autoplay music, default value is false.\nvolume [optional]\nDefault volume when the player is first opened, which will be remembered in the browser, default value is 0.7.\nmutex [optional]\nWhether to pause other players when this player starts playing, default value is true.\nThe music shortcode has the following named parameters only applying to the type of music list:\nloop [optional]\n[all, one, none]\nLoop mode of the music list, default value is none.\norder [optional]\n[list, random]\nPlay order of the music list, default value is list.\nlist-folded [optional]\nWhether the music list should be folded at first, default value is false.\nlist-max-height [optional]\nMax height of the music list, default value is 340px.\n","date":"2020-03-03T12:29:41+08:00","permalink":"http://localhost:1313/posts/theme-documentation-music-shortcode/","title":"Theme Documentation - music Shortcode"},{"content":" The bilibili shortcode embeds a responsive video player for bilibili videos.\nWhen the video only has one part, only the BV id of the video is required, e.g.:\nhttps://www.bilibili.com/video/BV1Sx411T7QQExample bilibili input:\n{{\u0026lt; bilibili BV1Sx411T7QQ \u0026gt;}} Or {{\u0026lt; bilibili id=BV1Sx411T7QQ \u0026gt;}}The rendered output looks like this:\nWhen the video has multiple parts, in addition to the BV id of the video, p is also required, whose default value is 1, e.g.:\nhttps://www.bilibili.com/video/BV1TJ411C7An?p=3Example bilibili input with p:\n{{\u0026lt; bilibili BV1TJ411C7An 3 \u0026gt;}} Or {{\u0026lt; bilibili id=BV1TJ411C7An p=3 \u0026gt;}}The rendered output looks like this:\n","date":"2020-03-03T11:29:41+08:00","permalink":"http://localhost:1313/posts/theme-documentation-bilibili-shortcode/","title":"Theme Documentation - bilibili Shortcode"},{"content":"The typeit shortcode provides typing animation based on TypeIt library.\nJust insert your content in the typeit shortcode and that’s it.\n1 Simple Content Simple content is allowed in Markdown format and without rich block content such as images and more\u0026hellip;\nExample typeit input:\n{{\u0026lt; typeit \u0026gt;}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u0026lt; /typeit \u0026gt;}}The rendered output looks like this:\nAlternatively, you can use custom HTML tags.\nExample typeit input with h4 tag:\n{{\u0026lt; typeit tag=h4 \u0026gt;}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u0026lt; /typeit \u0026gt;}}The rendered output looks like this:\n2 Code Content Code content is allowed and will be highlighted by named parameter code for the type of code language.\nExample typeit input with code:\n{{\u0026lt; typeit code=java \u0026gt;}} public class HelloWorld { public static void main(String []args) { System.out.println(\u0026#34;Hello World\u0026#34;); } } {{\u0026lt; /typeit \u0026gt;}}The rendered output looks like this:\n3 Group Content All typing animations start at the same time by default. But sometimes you may want to start a set of typeit contents in order.\nA set of typeit contents with the same value of named parameter group will start typing animation in sequence.\nExample typeit input with group:\n{{\u0026lt; typeit group=paragraph \u0026gt;}} **First** this paragraph begins {{\u0026lt; /typeit \u0026gt;}} {{\u0026lt; typeit group=paragraph \u0026gt;}} **Then** this paragraph begins {{\u0026lt; /typeit \u0026gt;}}The rendered output looks like this:\n","date":"2020-03-03T10:29:41+08:00","permalink":"http://localhost:1313/posts/theme-documentation-typeit-shortcode/","title":"Theme Documentation - typeit Shortcode"}]